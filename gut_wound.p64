picotron cartridge // www.picotron.net
version 2

:: gfx/
:: gfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA1LTAzIDEzOjI2OjA5Iixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCJdXWx6NAAEAAAAAwAAADBuaWw=
:: gfx/0.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA1LTAzIDEzOjI2OjEwIixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCIscmV2aXNpb249NzUxNl1dbHo0AMgrAABdvAAA8h97WzBdPXtibXA9cHh1
AEMgEBAE8PAsZmxhZ3M9MCxwYW5feD0tNS45Mjg1NzE0BgABFwCFeT0tMi45MTAWAKozLHpvb209
N30sTwBCfzp-MQQA8g0fMQIvIR8xbzoPIx8xPyAfMU86DxAPIA8ifzE-CgAzOg8iJQCCHzoPEB8g
LzopABEPHwBQPzoPM38MACIgLy8AEyMtAAATABQfQgAVIzMAISAPFAAgLzo1ADEvID8IAGkPEE86
DxhHACopf0IAARAAJB8gPAADDgEfMQ4BMnD-EBMPEm8QBAARHwQAEV8IAFAPEv8QAAUAYQUPEu8Q
HwQAkT8QDxKfEB8SLyYA3w8SfxAfEk8QHxL-ECuhATpVHzBfOp8EAPMDTzqvMD86vzAfOv8wAS86
rzBPFQDRLzrPMA86LzAPOs8wPyUAABQAv-8wAQ86vzBPOn8wlQA6wf8QFB8YXxAfGG8QDwQAPP8Q
EhEAHxoiAAwvXxCTADuSHUkN3i3eDf4LBwAfOl4AOv0aAA8QAA4PIA4NjzoOEB4djBAeDQ4NjE4d
jA4NDg0eDYwNDg0OLYxtjG4CAA_gAjr-BvUQ-zUB3zIfNQ8ytQ4fNQ4FnQUOHQYAEpO1Dh3e-QIv
Mb2QAB81kAAyoA8gDxA-Oh8wfzEKADMfOj8KAGQPOh8wLzoABAAbACYwL-wDRSAPEC9cBAEeAAIO
ABUwYARALxAfIEQAAzEAAQ4ARi8wDzNeAApiBAFiAAtiBAEpAABiBDQfOg_hAAFHACJ-MRYAMh8w
D2wECFMAEykQACgwD3AEABIAD3IERB460AUPkgE3ES-lAAPBAGA6LzAfOo8WAGEwHzoPKo81AQF7
AYMaHyAPIy8xL4sBIB8gEgBxPxAvIB8QHz8BMK8gHz4ABSYAAmoEIg8rJgABfQEAkwUiLI8cAAA3
ARcsVAABbQEALAART9YBQg86Dy8qABIPOAAWDywAED88ABIPLABPTzp-IB0BOi--Em0BO7D-Ixcf
Fs8jPxbPIwgA8wgPFh8jDxaPIw8WDyNfFg8jDxZPIy8WDxgAWw8jLxY-EAAXTywAE48YACbPI1QA
P-8jF7EAOk8PMQ8wBAAJNv8xAA0ADyEAAxYCDQAPQgCoHwFXATpPbxCPOgQAKQ9SBDsvNREiBid-
Af8qAP86AB4BOhHfSgURv1kEF68GAELPOg8gHAAXzwYAER8MCgIiBjI-IC_qBSEgL40EES84AAJj
BBAfQgpgEE86HxB-QwQhEO8_AAAIAAMOAAMMAA9eBT4EWwARLwYAca8g-zoMDxDzBCMQr7QKMt86
DxcACvEAEH-fCiAgb90AQSCvOh8nAB-vqAg7Ee9TAAG4BgAeAZAgDxBfOh8gTzBEAQVoByEiL0QB
Ej99BQIuADQiDyAkADAvMB92AUEiDzA-RgAiDzrgAGAfIg86XzDJAAC3BbAvIh86PyI-Oj8iL8cF
USAfOl8icQoy-zoyjgEP2QA6Mf8gALwADwQABhcfDAAKBAAAzgAe3yAADQQAACQAFs8QABc-CAAR
P4gCAEQAAQ4ACAQAFD8aCEU-DxA-KAAVLzYACCAAADIAFx8kABsvRAAaf0AAARQADyAAAwNcAR85
XAE0EwFqAA8EAAITH6YADwQAAzb-PwINAA4EABcfSQAOBAA2-yACDQAPBAD-Ag-oAVkD7AEvIA8E
AAI1LyDfDAAPhAMHBCQAMc8QH0wAQi8QAA4CAAA9DRA_CQAAKw2xAB0eDS4gDgAOEA0WABAQCwAA
FAAlDU4SABsNEgAQYA4AH3ARATqjPxIfFV8SHxUVLwkA-yYPEhUeHxVeHR4fNQ4dXh0uHB1eHT4c
DV4dThxeHV4cTh1eDRw_HV4dHC4dXh0OHB4dXh0eHCoABg-XBzu-FzD-GED-KSD-OjBZADswOmlP
-AVhED86LyBPdAcAvAEAWgd-Hzo-IP86SskFO8A6Yj8xLzpPID86PzFxAAAeDDY-MQ9zAH8wvzo-
MP86GQdREl8DBwkZBxdfFQczLzofZQgAEQcqTzAPBwDKBwC_ACAvIsoMAg0HgA86TzAPOl8iRwcA
oBE--zpEyAA68AlgDxAAHg8gHh1wTg0ODWAOAB4NHh0wLg0OADMwDhAQACkOIBAAECBNAwASAFIQ
Dg0eABQAERC5EAsVAAUpAACcAwUUABIAKAAzIA4gEgARPhAAD4YCOgFaAQ8EAP_pJP8grAYfOBAC
MgI-BlAfEAAOYDoGME4NTg4GQR4ADjA0BmJODS4AHgASABAQ5wIAFAAQIAkAAhQAIQBOEgAApxMT
EBIATw4NHhAUAAYUPhIAEg0CAAAUAAIDAwJQABBgEgAfcPICOgR9BiYfNX4GNB81HxYAQxIfNQ8M
ABAvGAABCgAQPxYAAQoAUk8SHzVfIAAhNU8IAE8PFR81VABBD20GPJ4A9ED-KXD-OBAXBQ-DCqRA
Af8QAI4X8AcRIh4SDyACDQ4fMA4SLR4dAg0CDhwOBwAyHgINDQAACAA0Eg4dDQD_AA4CHS4NAh4c
Dg0CrhzeDGoBDxIBq7FfES8QTxEfME8RPwgA8wI-EQ8QDxEPEB8hDxA-ER8wLxAAsw8hEQ4PEC8R
HzAfEgD-Fw4BEgEODR8RHzAPEQ0MDQ4BAh0CAQ4NDB8wDA0MDQECPQIBDQwLMAFZNv8QAg0AD-QA
ARADFQETr58NEK8YCA8QADIPZQc_cBAOHyCPOh8sBaANjzoNDhAOHYwdDQAfjAwANQ-ZAzoVgGYB
AXoCEIAYAUMfPw8QGAAADQBAgB8gTxAAIh8QFABDDxCALwkAmg8ggG6AbxCAbQIAD1UBOhGPJApw
EA4PII86D1cBPh2POhUBDwwALg5WAQ8dBEovIA8NAwoWAA0ADyEAAxISsAEPBAADFx8MAA9-BAMf
YPgCPBIf1gAUPz4LgA4NTg8-Tg0O3gdRDA4MHg0TAB8MEgBcD0MLPEEw3xEfBABzDxEPIA8RHwQA
BQwAAxgANQ8gAgUAAw4ABDcAE78nAFGyDh8w3g8WJhAw2gkPfAIzMw8wD_YFYgECPgIBDnIA8A0O
DQ4PIQECHgIBDA4NHzAdDg0ODAESAQwOHRstDAD-DBEMDi0bPQ4NDhwOPRtNPk0bXS5NG90b3fsB
-qIAPw6UBQ8QAE5v7yAfEL8gEAI6Bi4UHm9mFA8YACIAQAMKBAAEJAAEEAAMMBUEUBUPgBUTBrcF
DAQAFx8MAA92CAYPPgE6ADcGH24CAAZPbyCAbXQCOgQvEyJ-P9EAET9JAS9vPxgAMwoEAAQkAAYS
AAMEAAW7EwTHEw-rEw0VHxAADiAAD68BDR8ArwE6N-8-ackARz8PEH_kAhVvDAATTxgAE18UABFf
4AIRT8sAE28IADUPIF8cAABTAQfkAh8gtAA8FGCYAAIEADePPz-AABVPDAA0bz9f1AAjIF8SAACo
AAHOABIgCgAB0AADHgAmXz_yAAD_AA_2ADsiEBQkJRNPJCU1TxAPCADh-xAZDxLfEB8SfxAPEj8I
AAIjJRN-FAAR3yMlHyM8Azqv-zmvDzqvOf86JVcAPP8JUB863zlPOq85fzp-Oa86TznfOh85-zpA
jAlcLz8PqQ1GS_8QBO4CAA4tAg-dAKXxHPQAvyEWbg8xBg0uFn4GPRYuBh4dBj0WDR4GLg0GDi0W
HQ4GPgY9Fi0GHR4HAI8tLi0WLQY9DgIBtx4E4AEP3QA78QA5Xh86rzlPOn85fzpPOa8fAx9O3QOS
HxALJDxROaAPOu8tBD--OiBbADoxXzqfgQRznzpfOb86P4UEH6BkADoGKAL-Cg8g3h3eHb49vj2e
XZ5dfn1_fV79AJ8wTaxwADr-Az8xFo4PIS4Wzha_9AD-IJD-MMMLOwXRAP8LDyDuHd4d3j2_Pb5d
nl2efX59fp1enzBdrE1wADoxnzlfBANxXzmfOj85v6IBH65hApUPUy48QV8gnzrBKQDdDBM6jgQB
YRsUj1AiA84tEW8QABUf7C0SXwoAAQAkQA8gTzoDKANbLgIKJBIwGgACLgBAHzAPIGUbAxIAEzBE
KgJtKAMWAADWKRIfCAADEgAAxygTP_4pEi9iAAMMAAC0ABZfOAABuAAVT1gAER8sAE8-MB86QgU6
AgElBgclEx8GACO-OjcBBwoAEa8KABUfCgABQCkkIJ8WAAUMAAFkKSEgjwwAAagpAwwAARcBAYYk
AjwAIS86gwED4QARPw4AMz8wPyodD28FPBABZAAXLwQAAWEBBQ4AAAQAADMCdh8gDzEPIS8EAAAS
AAgQABIhrgAJEgARMbErJyAfFAAvHzFMAJcPagE8JwAfVAEDWAEqMC8QAAm6ABdfDAADpAAvIS8Q
AAoPQAB7D0IBTwPcAQcEAAG_AgeCACAPIb4CCv4BAdACCrgAAkwABxQALy8xTACdDmwBDx4LpQQP
LA8EAP8GDn0mD_oBvCMgAI0FHjAEAADrAgDmGA86ALcOzwEPNAoyD08A0A_FCNEP0QiGBlcABXEA
LyEvnggZD0AArA9PAUgPVwgtD_8I-x8HlAUPBAD-oy--EBACUg-qBxAPOgD-SiOvECYAI68QEgAP
7AjYDzsJ-zoHBAAP7hIBP-8QACoJ-wwHLgEDuBIvMC9CAVYP0QjFD0wAAAdUAQAEAA__AgE--xAB
ZwSJT68STxAEACkP4zQ8dA0fMc86DzAGAGJvOg8xDxoEAADVQlFfOg8wTwoAZE86DxoPMBwAIA8a
FAAzPzovHgAhPzocABQwHgACPgAzLzo-IAABqBgNQAAA1xcVLyIAARsCDUQAAi8YBCYAAK00D0gA
AQRoAC8POgUwPKUBHzHfOh8xDzDPBgAXH6IAEW8QAFJPMQ8wXxoABZgAAKQAE08eADsvMD84AAHC
AAMWAF9PMT8wLz4AAACKRARAAAHqGQ9CAAAoDyAkAAD8GQ5IABMvFgAvTzEUGj5SnzpfII8bGwDK
JQU1GyEPEMoZAzMbAtEaAkMbIS86AhoCsRoBAkQAwwACORsAwDYRTw4AAhpEAksbEy84ACIvMEkb
AkQAIw8QPRsB9AMiDxAkGgB_ACIfMAw3Ex8SAACLGzQfIC8gABYwZAARX68-AmECAhoAJA8gfhoR
PygAD9wrPEIPEN86BgAAoQATzwYAASEBSSAPEL8KAAHbACIQr_EABwwAAhgAEJ8iACUwDwwAAedE
UiAPEI86VhwEDAAkLzo_ABJ-ZQED6wARbw4AET8IAC-vOjAFiS-w8M4F-xcjLzoVBAlBBQ_lBQAY
Gj0FDiAAD0AApQ-9BTwSD0wFBY0ACrQFBdQFBY0ADiAAD0AAqx8vTwE78QD-ExD-EgHfIx8SDyO-
Eg8IANUPEh8TDxE-Ew8RHxMPFAB5LxMPERIOLxIASAIfIwISAH8fExIfIxIfJAAKZi8TDhIOLRAA
-wQdDj0OHQwPIxwLvAsc2-wCLzG8ZEw64foQ-x0B3ysfHQ8rvx0PCAB1Dx0PEXoODw4AhgoOGh8r
Gg4KEgBnGg4-Kw4aEAAnXysOAE8KfysKDgAFVQ4KXysKXAACcgCf3yv-HQIvMb8d2QA68AX3EPgB
3xUYDrgOGA4IDxEnFicNCAsAcQcNFx4XDQcMAFIXDT4NFwoAGl4IAFMHDQc_ByYAMg0nHjwAn7gO
GN74Ai8xuKkAOvEA-x8Q-y4B3w8fLg8Pvy4PCACVDy4fH189Hx8PEAD4Ag8fDz0PPw8RHz8PEQ8-
Dz0PHAABGgAQD6kbBB4ACBwAIhEP_Sw-EQ89NAAUD2wACAqYAAKwAEDfD-8uwQEfLhgBOxARXBwQ
30QNMTG-IEwNbzEPIJ8RDwwAPAJcAEDfMf8gxAAfIMQAOi-w8C0HjxIgIAAAiw4OQAACFgAzLzCP
HAARnwgAAcNBEhoEACEfGvIlMSB-GgomNCAPOgoAMR8aTx4AAc4JAAkLJRpfEAAxLzB-h0IPDEs7
D-4GMB8gQAABAKUPAiAAAAoABR4ABUAAII8gHAAinyAOAAD6AAcgAQH9JQIgAQIoAQAUAADBCwYi
AQQOAAAgAQI8C48-MH86LzD-OhcQOzz-EhHMBj_fEw8MADwCXABP3yP-Eu9MQTP-HRGuBhIbRAZC
DxuaDgoAcA6aDg0fHQ0HAB8cBgAGX74NHN38mQBBIPgRbgZ-tA4YDgSXBAYAFBC0UQYPJgFCLC4R
UQY-nx8PDAA8Bv0FD8MAQi8gEfwFWQ7DAA_4DX4CEQcAsQAAkxRxHzEvIB8xT9EADgQANS8gDyQA
AAgAOv8gJBEAE18pAA85AAEIYQA2-yADHQAMBAA--yADMwdID08A-28--zoQhQk9D20JST7-OhDC
WQ_2WV8--yARpAN7HyJkAjwPTwDYTvgR3xTVBw-hBx0P4gA8D2cHnw8OBA8O6AoPpVdhDrFXD5cA
OikaGQIAODkaGQIAPzoZGh4ARB8aXQE7zxAirzNPEE80DyNPNAgANQAeNAMSAAMIAC8vILYAOP8C
IATwEc82IA6gDiAPFKANIA0EABuBEA4NoA0u0B4CAEkODdAdAgBcDf8zAPA6ChMwnwASMJAAHzbH
Aw4LMQAuMTDfBkAAll6VAgCgDyVOlQ1OlQ8mTg8AAxUAEQ0UAEsMTpVeAhUPWQALow4vBAC-NhAO
kA4EAFYeAA6gDgQAABAABRwADyAAAw8cAA8PGAADZQ8UkA0QDQQAVh0ADaANBAAAEAAPGAAKTQ0Q
vzOwC0U5LjQ2AQAUN-oANi4xMwEAAgcBHzQ9KJ0oHxAOAA8eAFsmHxEQAAscAFQhHxEPIRAADxwA
ASqfEQoAMw8xDwwASgUPNQUKAA_6Ag0PtAEBDwQA-0rFbxEPKQ8qHykPKg8REgACEAARKWdIARIA
Eh8kAAUQAAY0ACgvEDAALy8Q4AEeMiUPFcIGGxkLAAIKABsaCwAPLABtD9MFHSMfOvQGAwgAkj86
3zMfOt8jHwgAAAQAHzQEAAkk-zozAx8zcwASzwgIBH8zfyN-M-80GLAGHPAN-xIKKr5Knlo_ei8q
Ci56PQ8aLhpNDD0MLgpNHAYAIQwNAgBhPQwuDBo9GAARXQ0AAQYAHm0FAB8eDAIMHDGBAEyVXzqW
-QYalvkGfpVenxVem14TAQ9aAAj_CggIBDYwNQ8lIDUOIDUPJiA2MD8VMD0wPTDMAQ_gAAsDxgRA
EQ8hjwoDUjUFDgUODAAUDgsA8AofEA8RA70fEA0DvS8TA0xvIQxDLG8QHCM8s1H-CC8hDxCMa48j
a4pvIoppimmKbxKKaIpohwALDZ0JCI4DKR8SwAMCEAAHvgMvHxIuAAwVIS4AIiEPjkYBIACUHxAf
EhAPECAOLwBUAA4fEm4sABAeDABRKQ4PKg4MAKO-Ih4fEm8iDykPBAACFAA--xIi2gAcBJQEL78j
CgAUFDgKAEYPOK8jDABIDyOfOA4Acw84HyIPOA8EACwfIhwAG08UADEvOB8oABsfRgADPgABBAAu
DyJwAA8qABEGXAAiPxAsADcfIm8MAAAwAG8fOB8jDzg9ARwOIQEPNQENNa8jDwwAN584Dw4AAocA
AgQAAZMACRwAHk8UAAESADkfIi8WAAQ_AAVOAA5wAA8qAAEPXAASM284HygAADsBMR8jHzgABhQA
Dz0BHPAO-xIHTzGPEm8xbxIvMV8wDyFPEh8xLzBPIB8hPxJDGxEv9CUAICogPxJRGyAfECNrIT8S
9RoiEF8MAADPJAEKABWfBgBALxIPEAgAaB8SDxAPIwoAIA8xRBkQHx4AAFQZQRAfI48KAAtlOA_6
AA2-DxJvKg8aPyoPGi8KAAzRCl8qDxofKi8aLxIPGhQAEQ8RAAAcADMfGg8QAHYPKh8aLyoPJQAH
PQAOXAAPCgAlBecAHzHnABRCnxVfOgQANg8lTwYAECYGABdfBAAPHgAHP-86FnQADA-ADR0PaREA
D4w96iHfIwoAQyO-IQ8KAGRPIRYeBh4OACA_FjhKAAwAnw0uFh4GPg0PMGEBukU53xofBAAQXwYf
gDpPGh85Hxo-Ny5BGg86Pw4AMS8hPw4AHy8OAAAxPyEvKAAvDzkHBBwiPxKHBgIIAAdKBQEWBSg-
EusGKz8SiQYDHgACLAACBAAsDyJSAA4eAA9EAAEIYgACPAD-Aq8jPxK-OE8STxC-Ei8Q-xIX9AEc
AioGIj8SeAACBAABDAADFgAYTw4AAQwABCwGJD8SLAAFPAABFgAfnx4ACgxEAApiAAQ8ABGvBgA1
vzif2AAfFtgAHDEPEM-4BSDPIgYA8QUPEh8ibxIfIi8SHxAfIm8jHyIPIxgAXiMfIm8gDgAAWAZj
HyJPEAIODgAUIzYAUy8SzyI-TgAfTwgADD7-EhO2AA9vBhohDyoLAGAaTyoPGko0BjBfKloHAABD
DOQvEnpPKi8SGq8qLxIKvwUAF88EAGQfI48iHyMIAD7-EhKOAA_iBTsFrAMPO29pD0IAAl9PEa8x
T4QRA0EhTxGfBgAHFAAGBAAfIToACBIwHAAPJQEfICMfugUUTroFUg4WHgZeugUyDgaeCQASvgcA
YR4fHz4cHgwAhi0MHxEdGwwtfwAABAAYOw0A-xBrHyB7TzELHgtKG9ob2hteHyBeK74bDwnb_QEP
ENkIqQAdEDmeIwI0BVEvGg8wHxAAMg8gT0QFUTAPOQ8QEgAUOhIA8CYfEN85HxCvOQoeHxCeGh4d
jhouHX4aPh1uGk4dXhouCh4dThouGh4dPhouGi4dLhouGj4dHhIAIA0eIAAQDSAATz4NHg1SAR8f
MAQA37MrDg8wnyQLLxsLrwYAYBsPGxsvJPYw8QM-JCv9Av8SAV8jHxNfIx8SPyNcJBATaCQADAAD
YQEfMmEBRRcRBAAEFAAiMS9iAx8RHAABA_xbETGqMAYEAB8xPAASDhAAHzEgADOB-yRA-xIBPxB8
OwEGAAAzVgIKAA2cOz8QDxJwCT0oAA4CAEjwAg4AAgAQHnlmBwIAHv2lCg8EAKASX_oBCQQAHX_g
AX4fEQ8xDQ8hWRcLFEgP2gIRDwQAiSR-EwoABQQAANEDFxMQAAAEAG8TDyM-Ig8YAADzA18j-xMB
DyMPE08SDxOPI28TjwwAkH8jDyJvE48iD3YoBQQADxAADQ-hAhwCiABmCg4PMA4NAgBYCg8qDg0C
AF8KCwwNDhAAFxAacmUKAgABoF9DDQkNDgIAMA8gCQcAIAkIBgD-CE8kGBcYV90XDb4NFw1PIRhG
DRcNtg0HHwUID_cAIgwEAGJPIa8xTyEOADB-EU82fGERTyAPEU-tGQQMAGIfMQ8hfxEoAFHfIR8x
3x4Acw8xzyFfMZ8_AAEEACARj4A8RxF-IS8SAAAIABo-FgACQRgOR3gPygAcRB85PzoMAAENOlY5
PzpPMRIAASAAAwwAEV8eABNfDgAPPAA5V18xDzkvHgAPcXlXDyoBDvAjED85Gk4PEB4dLhpeDR4d
HhqeHa4KHh2eCi4djgo_HX4KTh1uCl4dXgpuHU4Kfh0_Co4OIQ_KAEELvwIfHxAADgT3Ag8IABMA
hiwvMwAnISIPuwAPAcwuHDEEADMfIB8aAAoGAJH-EgIfEC8bjxCuDWMbLxAPG38MAPAPKw4PEBtN
HxIPIFscKxwfEgxLHAsuCwwaHCs8Kxz6wgBGHwkfCgQAFz8MAA4EABc-DAAPBAABD1cDH1AhHxEf
GcQdEF_dA3ERHyE-ER8h9AhwJQ8gPxF-IQIJIB8RDAAzXyEfDADwBs8RHyAvEQ8h3xH-IVJPMP8h
Cg8g3zYAXyHfIA8hhQAcWz8iHzEv0AVAHyIfMR1-CxcAAFQXN1APMBEAAhUAEiAuABcQFQAABAAQ
IkMncC8QbxMPIk8RPA8GAARCbyIPMwgAEgkHABIKBwCgGj8gHxAKbyIZCmBjQgoJbyJNAg9PAh7g
-xIDKr5KrlqeCi8qej5IDyJ6Lk4PMU8qGgoAUx8aTyoKFAAXDwQA8QAKLg0-Kg08Gg0uDTwNXAoG
AAEMABtsBQAMfF0PkwANIh8SbQA-byovCgAMES8sFhBf2A8CNxYRDwoQEBoAEEsPGi8qRBYDOgAF
IQAWPz0ADlwADwoAHS8PEucAKiMqDwsAEUp6ATAvElrfFiAvEpcBAAgAYE8qei8SrxkAM78qCgUA
L88quBAHHxG4EEqnERQE-zYBDyXgHgIAXw4PFOAdAgAAPw3-M6AFDB44lgLxCARPMa8SbzF-Eg8h
XzAvMU8SHyFPIC8w1RgAwwcRID5_AF4MERIchAB5ZxAwDAAQX3QVISAPDAARfxQMAAoAGZ8GADIP
EC8IADEjDxBJMgUMABAfERkBCAAA_xgFKkwfObgAFSAhAXMEz3oPEN8hDxAJ3ioZGvsFJx84bBZ3
YS8gby1vIGkGiy0fLw8tDy8fVBGAHzRvLY80by4EALL-NAf0Ad8iFE8gjwUAHwRHAQwPsyhIIgkE
CAAiGRQIACEJJAcAIxkKCAARNAYAFBoHAA6SAQ_pADt_dBkatAr0bysED2cANyAZdAYAf7QZGuQJ
9GBpAEkPHgAEIwQKCQASFAcAIxokEQAjJAlzAQ96AQEPqQAZwAgIBP8kAA8SHyMfE6AcDwgACx6P
mwwPBQELMR8SzwwEIc8iKAQBlxYQD90WBdMWACIEBvkWHw8OAAJ-DxACTh8iDggXJw_3AB0SBIVz
nw84HyEPOF8iFA8ACRw0DwDP3vQBDyLfEg8i-xKAeAAdIE8j5wMyIY80BQDi3vQCDyIfIC8iDyNv
IhSVCRAPGQFPEQ8jXxEAAQKKAABjATAhDxIPCQMTABIOEgAeDhEAEyERABKeawBGHyIfKWsAbCkf
EQ8pXw8AHwTWABwDcSUQKicE8BJfMx8qFBkaCW8zBA8ZDyoEGRoPI28zFB8qGhkfI18zFB9QBPED
HyNPMwQPKh8ZGRoZXyMfGR8qDANwBAkKBAkPGSwA8BcaBA8ZBA8qDxkEGh4aGQoPKgQOBA0OBA0K
CQ4ZGg4EHQQOHQQOGgsAcQ0EHh0EDjoWACEeDT8DAAoAD0AGLaD0IA8Z5B8qHxm0BQBRHyofEHQH
ADMZHxAIABoqEAASPxAAERAUAAYEAAMQABs-PAArCQ8RAPAMGhkeHxAeHxkeHRoZGh8QHh0eHRka
GRwdHh0eCAAPwgAhgC8PKrQeHxl0ZQBSHj0eHR5XALIeHR4cHh0_HR4dHA4AAAgAEj0WAAseACMN
CR8AEhkYAACGAD8ZGhyMAB8EzwRwFA8ZCRQ-M_4BAB4C8AEkTzMKGRofGTRPMw8jGRofEQBQHyMa
GR-5AQALADAJGhkdASBfIxUBMhkfKlQCEAlyAoAeHxkEDg0EDrQGIh4dCwCQDQkaGQ0JDgQdIgIA
CwIACgKABA0EChk6CQ0lACMZGi4ADZIFD14BGvAOFSIE8A1PIOAOSw7ADgtPIwsOoA4LDzIPIx8y
DyMIANMLDpAODzIPJA8yHyQPFAAAEwAQJLglIS8k-3EcMhEAkCQOkA4NHzINDAs78SiQDo8aDpAe
ah6ADgsPDR4qHgkLDmAOCwkbDiwOGwkLDkAOCwk7DgwOOwkLDiAOCwlbDlsJCw4AIgDxCjsOawkL
HgsJKx4CLgJLCQseGxkrDisOAgs6AEYAHhspDgAnEC4bAPUJMD4CLgIuGwkeQA4KHiIeCk5QDooe
Kw5ABgDwBRsOUB4aLioOAB5gTgAOKg6QHi8jCAAhoDgGADEIEQgIAP8EMQA4sDEAGCGwERAIASgB
8ABIMH0vPB84MQAsXxIE8P8RlAAa8CISBDB-F2AOcQ5ADpEOIA4RFQFFEQ4QDgEFDxYPIAUvFg8g
DxYFAQ4QDgUdDyA9DB0FHQBQHQU9BR0VADARfRE1APABXREOMA4CcQIOIA4CHxVRG3IX-yICGx0f
GAsdKwIeKy0KLTsOAA4bFQgbFSsOIB5xHkAOcQ5QDiEeIQ5gDxMfERAZDxMwtwB2QAgPGFu2ADEI
Clu2ANAKOy0FDhAecQ0FDjAOvAAPuAAqL-AEcAFiD7QAQxAgtgAiHxYIAAK3AAAOABE-FgABuwCh
DQ8gBQwdDAUMDcAAfwUNBR0FDQXGAGAOTAMPMQBuD64DLjuxDhAEADAgDpFVASF-FVYBEZ1TAYy9
Ah7dDgAOvXoDXy8TECwwfwBWEZ0RAkgecQwFRgNPLxMQK44CHw8EAS4OAAEPfACODo8CDzEAngBg
CBQOYAgxKw4fYQg3Kw4PXgg4Kw4PWggxKw4fSwgsDzINAIE7Dg8kHzIPGgsAET0GACAtHk4Aog0u
oA4LDgsOHzK-CBANYQAAWwDhCw8NSw4bDnAOCwxrDgsIAEAbLgIeCgD2FBsMOw4bHoAeCzwOGx6Q
LisOGx6gTgIeAg6gDi0eEh6gDn0OBADQHQ5NDrAOHQ4ALQ6wPgUA-xgPIy4ALQ6gKh4ADh0OkBoB
GhA6gBoBCgEgCiGQASogASoBkCogSjBdExkAKgEfIyoBfTIbDmAqAQAUAAEsAWEOCw6ALisIABCQ
MAFgHqAOPRIeHQGgLQ7ADi0OHQ7ADt17cNAOPQ7QLj0rAUA_PQ6QKgH-CS0OgEogTmAKIQpAOnAq
AUAKMXA6MAE6ICYBDA9QArGBLpAOjQ6QDj1nACEtHgYAUA4ADh0eXAIhAE4GADEODyNIASEAKmwC
-wYaARqwSgEKAcAKIQAqwAEqEBrASoBRAq4PewMWUT0OLQ6gJQE1LQ6QCAAARoECCAAQIE8CAwgA
-whwPyNAOnAKIUAKIXABKkABKgFgSjBKEC0BDA8KBR4PMQD-UvEOFBkE8AtPE9AOQw7APiMOoA4-
FQ4TDqAOHx8PIAcKADkPFg8MACEfFgsA4CMOIw6wDgMOIw7QHhMOQABAsA4THkIAXwMOEw4TCAAH
Qx4TDiNAAP8OoA4TDkMOgE5DEWARHkAOMTBBYEEgMYAhQBGQETDGAJAgkB5AABCQEwC_Mx6AEy4j
HhFgERPJAA-xAXkPgRD-TQBfAR8iXwGZKAk7XwEvCzlfATMhGh5fAYA_sDgACB4IsF0B-wQ4sAEY
AQAIIbA4AAEoAbAYIDhAuAIeD1kB5CIOKlkBEA4GADAKHpAIABFOBgAwPyOgBwD-BwgRCLA4ADGg
IRgAMZABKAEIEBGgSLC4Av8jsaA_AE6gPgA-I7A4VwH-AiEIAAEYAaABKAEAOKA4IBhgVgEZ-AER
GQTwBm8TgA5jDmAOgw5QBABwHmMeUC5DLgwA8R5AHoMeIA4THkMeEw4QDjMeAx4zDhAOAw6DDgMO
ED5jPhAzbjMQIw5jDiMQEwC4BkAAE0Auugb-DHAOER4jDnABHxgBAAETAXA9ADGAHRANEQ3QHWID
DBw1rQAfQKwAThFOsAARDqkAYDEAMXAxALgAT4ARED2uAA8PWwFa8QAOIw4DLnAOIx4RDnABEwGn
AN9wMQA9cA0RDRAdkB2QWwF4BKwAEU6qADEOEQ5bAQCyAG8AMXA9EBGuABwJawV-aw6gDosOkAQA
AfAiHmseoC4rLpAeix5gDhsOaw4bDkAOOw5LDjsOIA77AQ4ADksOaw5LHjsOCx4rHgsOO8AHcA6L
DjsOED4GAPEJMC5rHjsOQA4PGh4rHg0OKx5ADo1OUA6NmgMxPQ49CAAwLS4tpAMQTpAMcQAeYA8j
LgybDBFMBgCwDCEMAAwtDJBBAEwEAK_gIRABLAHwASFQ-AQcH3DvABg-Lmsu7wA-BvUAAJEEMw0_
LZEENy0OkPMAAOsAMEwATAQAn6AsEAwhDPAAQe4AEA-eAY4A3AEQTuEGMC0OAO8AAYEOgEyQDC0M
AAwh8wARQQQAjwEsARAhsCGw3QGqUw4tPg0e7AAlTpDyAADsABRM3QEA2AIwECyg3AEP7QAa8gAO
GQQwTxNwDkMOYD4jDkAHDRVABw0XQAcNFkAHDRFASAQRUAcNQHAeEw5AABFQBw0TQO8MDwgABTFQ
DhM6AAQMADITDmAGAP8ALiMOkDGQLxgBgDENgDEN2gUMHDTFAC-wAsYAWRFAzQ0AQAAFxgAvPhPA
ACcOkw0PMQA9CcMDD2oSQiIeG2oSUA8NDgsuUABCCww7Hl4SoFsOKw5QDgsMew7VAsALDBs_Ah47
DjAOGwyAEmErDkAeC0wJADFQLjsIAPACYF4CHgIbHmAOPR4SPnAOjQ7lFAQGAACgEnBNDi0egA49
oBMDgxIPCAAA8ABPIwA6oBohABohkAoBKgEEAE2QSgBKSU5eMC4xNjYnTE0xLjgzKEwfNlYBWyCQ
LlYBAasTQgsOCy5PASJLHk8BMWsOO08BInsOTQERC1cBU0AeCzwLTgEiKwxPARBOEQABUAFQDgIe
Ai5AASwSHlQBMI0egFgBLw6QWAFvDt8CD08AeQlICqEDbxUDDlAODxYHcx1gFQ8gBw8VEQBQHwcP
IC90BIIPHw5QDg0fFtMMBb4J8Qc_LT5ADjMODA4zDjAOMy4zDiAOUw5TugkwMw4zvAmwLjMOMy4Q
I44jEOO6CRNjuAkADwsHBgAAuAkQL8gLgStgMQsACzFQBgAfIB0EBQ-RAEpRUA4jDgwZBQjRAAvX
AD-uEOOPCgEP0QAsD_oLXQWvAAHqCwObDN8PGBENAA0RDYAdIB1AsQAdHxexAA8BrQBOLoMuELEA
MB5jHjMCQwNuAy6vAACeAB4jtwAPsQAzDxQU6QhcEQAWFA8IAARQoD8jADhgETAYIYBhERAAHRQ9
cEggHhRXLTcuNzIBAAR4AYMuMjYxOTA0NwYADkEaD4cBW5KQDgseKh4LDoCOBjMsDguRAVMrDgwO
K5EBM0sOS48BAPEKBJEBBYcBACEABGwBWR4bGRsJlQEmGQsPAEIgHhsOiwFwCw5APiIuK5MBG4qP
ATIqLiqRAQFxAQ6TAQ_LAUwPJQ2SAAQAIx5gCgAUkAgASA8jLQwcDgApDZ8AASwBoCEgIVAVAWJP
gE4rTkgNTh4uDQEPFQFPUG09N319
:: gfx/1.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA3LTA4IDIxOjI3OjMwIixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCIscmV2aXNpb249NzM1XV1sejQAxBUAAJ9gAADzFHtbMF09e2JtcD1weHUA
QyAQEATw8CxmbGFncz0wLHBhbl94CADKeT0wLHpvb209N30sMQB2-zoAHzEfOgQAFz8MAAAEAD--
OsBTADnyAA86DzH-OgAPMe86DzHfOggADxEAFC8POooAHAUOAR8xMQAU-wf-GyD-ISD-MAHfMR8w
XzEfIV8x-zACDQAGEwFfAB8yXwARuRISBP82A-8hAB82BQDwAA82DyX-MAAfJQ8w3zEPMAgAAmAA
AAwADxkAIn8PJf8UAvAULQEZMAgIBIsAAEgAhzAfMR8hHzGfDAAvjzB5ASUPMQAEHDYxABgP6AEO
CgIPEQASL886dQAcL-86pwAdHt_JAA-GAj4fNsYCHQ4xAA-XABqPICAE8P----M0AE0OmQAPSAIP
DxcCKB8f1AQKHwDUBB4WwD8AD1MAIw9MAjQXD3UADIkAP-86BIUAHP8AwCqwOqBKoEqgOg8doDoO
AwALD00FHF-6MP8dsDQAHEAqwDqwjwBfDx06oA4DAA0PkAAgUROPMW8dBAASMAQAlx8wTzYfMD8q
Lw4AG28MACM-HWoAHzNqABiqUE8q-x0ADyrvHQQAL58dtwAcEQ8GAgDdAR-etQIhDh8FDz8AFxbP
gAIfDz4AHQ5SAg8DAAhfDzqgOg2fAB1fHdD-OhA1ABwOWAIPAwAGXw86OqANZQIbsAsMBL82jzEf
No8x1gcxjzAfBAACSgIPDAAJPw8lr68HDBw5ygAXT1QCDwQAAf4KPx0vE48dDyovHS8jnx0vKi8j
zx0vI-8dIzUBD2sADT--OgT5BAceH6UED60HMR45PAYPMQBNAocCHg4DAA8QBQ0PkQBFAIICHg4D
AA8RBSUcOfIJc38xnzA-Nr8EAC_fMGEBPC8xMW4GF1sPOKA6DQMAD14AHQB2Bd9A-ykB3xofKQ8a
vy8PCAAOIw8pZAAfNWQABQ_gBjEPwQAWAYECjkqgSrA6wCrwzQEPPgAMX-86APowNwAfIw86kwFP
sCrwrT0ADQ8DAgcPMgBHAh0CHw4DABMOSQYPYgAQFw8XAlYPLy8hfwwAFCoMAB_-CAAyX98a-ykB
gQUOLzExtwY2Dz0DG0-fOh8pBAAFA1EAHzRRABNfCQT-OoCEACLP-xIB3yIfEg8ivyMPCAAOIw8S
ZAAvMTPpAB0fEgQABQRSAB8yBQMfDzIAqwTqAQ8EAB0O0AIPnQBAFw-6AVYPIy8TfwwAFBIMAB_-
CAAyT98i-xKkAyEEQAIPBAAdDz8BUh-yMgAeP-8c8JcAHg8yAP---------------xT0FUCvFyAe
mA4QDrgOAA7IDgAOGA8gCA0YDQgNKB44DTgNOB4oDRAAEdgCADE4DQgCABAoLQAFDAAAQQC-IA6Y
DkAeWB5wXkCHAD01KA8YiQCzCBweqCwemDweiEyNADUMDSyNAP8FDA08DgAOSHwOEA4ojA4gHpwO
QK6OACLTaC8YDhAOeD0OAA54TZIA8QQMGAwNDC0eOAwYHQw9HigMCAwdEQDRSI0eOJ0eKK0eGB0A
DQIANC0eCAsAMD0e3QIAL-4BhwAddP8XAd8YHxcEAJMvGA8gDxgPIB8IAIIvGB8XPxgPIAQADyAA
AxffBAATPxgAFw8gAAQ0AAQEABc-MABP3xj-F7QAG7R3BgT-F2j-IGUfFwUAvA8XAA7-IGMOIP5j
Tw-zAC00LjA1OTUyMzgwOTUyNFoAoi04LjcxOTA0NzYGAAJpABkyaABwPAoEAP8XKloAPyoe-QMA
AEwOAP4q_B0TM2EARjEuMTYBABI3YAAfNEoDHh8wMgAvAWcC8QufHg4QDr0OAA7NDgAOHQddBy0e
HSc9Jx0eLQwAADsC-hENvyANHg0MlwwNDgAODQx3DA0OEA4dfB0OIA6dDkAeXXEDD3wAMYAdAh69
Eh6tIn8AEQJ-ABMCfwAQEi4AznwiDhAOPXIOIB4NgmMDD4AAEyBvHkUAcX0yDgAOfUKDAPcJPRIH
Ih4dJx0SJxIeLQcdMgciHk2CHj2ShQAgHh2DAL8eDRJ8Ih7SHtL_AXsAHUD-FwHSOgDDHiIHUgci
HhInMicSDAAAFgAQAmoA7wINlw0CHhINdw0SHiJ9aQAhIHdEDANwjyAPF-8gNgUAEAIFABABFQP1
AEUfF08gHxe-ID8XbyAfFyQAIj8gGQAxTyAPBAAxHyAfIQAFMgAXrxUACTYAEx8ZAAA2ADFfID8Q
ABQ-OgAzDyAPBABCHxffIBAAGk9CAFEvFy8gLz4AY38gLxdfIMADDb4ANP8XadkDDwUA9g-iBAhG
Ny41MwEAAy8CXC0xLjMxgAQK4ATRdBIEEP8TYCD_YgD_-wEAfU4A-mIg-mBDBUgzMi42zQQDYwA4
Mi4zAQADoQIP5ARm8gucDhAOvA4ADjw-IEwOAA4sDTwNPB48XTwePAoACAYAARYAIT8Qxgf_BCwN
Ow0sDhAOPD08DiAOnA5AHlzsBA_EADExLA8QCAAhHBsHAMMMKx48XTsePA07DTuHAAAIAM88PUsO
EA4siw4gHpvzBCWCfB8QDhAOjC2KABAMXgiyLAs8Cz0ePFs9HjwKAAcGAOEsDVs9HhwdCz0LPR4M
LQcAPk07TU8ID-gEFEDfEB8XBADxAE8QPyBPEB8XPxAPIDwOPwoAqV49Hxc9DjwOPRsGABBeCgAk
PQ4GAI9NPk0b3Rvd_34AHi-w8DIAswHGAfcFmw4QDrsOAA5LLyBLDgAOWw1bHmsEAP4cWw0JDUse
Sw0pDTseOw1JDSsOAA4rDUkNGw4QDjsNKQ0rDiAOOy0rDkAeW9ACD4MALXFLAx5rDTsThQAhGyOG
ABEzhgATI4YAAAgAAIYAzzMOEA4rAy1DDiAek88CJXJ7Ew4QDosjiAAhCzOJAGELQx5rDVMEAOFb
Aw1THksDDQkNQx47A4oAICsDgwAxHhsTBwAhCzMVAF9TLUMe09ICIsnTHtMeUy8gQx5jDVMEABFT
dQARQ18AETNsAAIGAB9DcQApL-DwMgCzAbwB8RGaDhAOug4ADsoOAA5aDyBaHloNCg1KHmoNWh7a
HjoNCgIAlSoeKo0aHhoNCAIAswoOAA4ajQoOEA4qJACeGg4gDpoOQB5azQIPiwAptToPGR5qDToc
HqosjwBZLB4qjRyPABEMjwAxHA4AjwARDAwOPhAOKvsND48AGHB6HxkOEA6KpQUiij2TAPEECk0e
WgwKDE0eagxdHlp9HjoMDQIAlS0eKowdHhoMCAIAlQ0eGg2MHR4KLSIAD64FJjQZHxcEAPcCbxkP
IF8ZHxdfGQ8gDxkPIE8UAAAgABM-GAAEBAD0Ay8ZHxcvGY8gHxkfFx8ZDyAIDgIAEQ8aACCOHe4F
EQ0CAG8tHN0c3fwNA_v1CpcOEA63DgAOVwhXDgAORyhHHlcoRx5HSDcEAAAQABFnHgARtywAfiAO
lw5AHlf0Ag9yACzwBycPEh5HSBcdHkdIBy0eVygHPR5nCAeCECBnXS8Av20OEA43fQ4gHgeN4AIl
gXcfEg4QDoctfgAhFz1-AJVNHlcoTR5HSD0EAP8ANx0oTR4nPQhdHhe9HgfNxwInMBIfFwQAoG8S
CF4fF14oTh0EADVOSD4EAAAQAFJuCF4d3gIAH-2LAiAPMgD-ef8RCAgEIBZQF0APIw8QHyMgDi8Q
HhAeDS4QFw0nEF4QXgB-AB8PRwHlsBAmMEggHyAoIA44AwB-HiggSDAmII0BIt8-EDA3IF4QVxBe
EFcAQgAibw8cDxAfHM8BLABNAPIEHyBQBQ8VQAUuIAUOBy4QBSceEAkAAQUAH06eACDyAUAGEAZg
BhAXEAYgBwAHEAcGABAAAgBPFyAHUFEAHf8LQCgwOCAHKA8YECcIDhA3BhA3BiAnBjAXBkDzAT0f
NjEAXV8SBPD-ETIAHPAgMH8XYA5xDkAOkQ4gDhEVAUURDhAOAQUPFg8gBS8WDyAPFgUBDhAOBR0P
ID0MHQUdAFAdBT0FHRUAMBF9ETUA8AFdEQ4wDgJxAg4gDgIfFVEbShTgAhsdHxgLHSsCHistCi1g
D-8QGxUIGxUrDiAecR5ADnEOUA4hHiEOYA8THxEQGQ8TMLcAdkAIDxhbtgAxCApbtgDQCjstBQ4Q
HnENBQ4wDrwAD7gAKi-wBHABYg_0AEMQILYAIh8WCAACtwAADgARPxYAAbsAoQ0PIAUMHQwFDA3A
AH8FDQUdBQ0FxgBgDn0DDzEAbg_uAy47sQ4QBAAwIA6RVQEhfxVWARGdUwGMvQIe3Q4ADr16A18v
ExAsMH8AVhGdEQJIHnEMBUYDTy8TECuOAh8PBAEuDgABD3wAjg6PAg8xAJ7wDBUiBPAOTyDgDksO
wA4rDh8jCw6gDisODzIPIwQAMAsOkA4AFCQQAAEPAIwfJA8RDxAPMg0AgTsODyQfMg8aCwARPQYA
IC0eTgCgDS6gDgsOCw4fMl4AMAsPDWEAAFsA4QsPDUsOGw5wDgsMaw4LCABAGy4CHgoA9hQbDDsO
Gx6AHgs8DhsekC4rDhseoE4CHgIOoA4tHhIeoA59DgQA0B0OTQ6wDh0OAC0OsD4FAP8YDxAuAC0O
oCoeAA4dDpAaARoQOoAaAQoBIAohkAEqIAEqAZAqIEowMzcZACoBHyMqAX0yGw5gKgEAFAABLAFh
DgsOgC4rCAAQkDABYB6gDj0SHh0BoC0OwA4tDh0OwA6GEHDQDj0O0C49KwFAPj0OkCoB-wktDoBK
IE5gCiEKQDpwKgFACjFwOjABOiAmAQwPUAKxgS6QDo0OkA49ZwAhLR4GAAAeHRAeXAIhAE4GADEO
DxBIASEAKmwC-wYaARqwSgEKAcAKIQAqwAEqEBrASoBRAq4PewMWUT0OLQ6gJQE1LQ6QCAAzHQ4Q
CAAQIE8CAwgA-whwPxBAOnAKIUAKIXABKkABKgFgSjBKEC0BDA8KBR4PMQD-UvEOFBkE8AtPE9AO
Qw7APiMOoA4-FQ4TDqAOHx8PIAcKADkPFg8MACEfFgsA4CMOIw6wDgMOIw7QHhMOQABAsA4THkIA
XwMOEw4TCAAHQx4TDiNAAP8OoA4TDkMOgE5DEWARHkAOMTBBYEEgMYAhQBGQETDGAJAgkB5AABCQ
EwC_Mx6AEy4jHhFgERPJAA-xAXkApgQUDaYEMgtPI0cERzIPIx_oBCAPMqgEGB_sBBEPnQSMLyQP
EA8RDzIRAPAIJA6QDg0fMg0MDRwNDpAOjxoOkB5qHoCWBPEaHioeCQsOYA4LCRsOLA4bCQsOQA4L
CTsODA47CQsOIA4LCVsOWwkLDgAiAPEKOw5rCQseCwkrHgIuAksJCx4bGSsOKw4CCzoARgAeGykO
ACcQLhsA9QkwPgIuAi4bCR5ADgoeIh4KTlAOih4rDkAGAPAFGw5QHhouKg4AHmBOAA4qDpAeLxAI
ACGgOAYAMQgRCAgA-wQxADiwMQAYIbAREAgBKAHwAEgwXwEdHyJfAZkoCTtfAS8LOV8BMyEaHl8B
gD6wOAAIHgiwXQH-BDiwARgBAAghsDgAASgBsBggOEC4Ah4PWQHkIg4qWQEQDgYAMAoekAgAEU4G
ADA-EKAHAP8HCBEIsDgAMaAhGAAxkAEoAQgQEaBIsLgC-yOxoD4ATqA_AD8QsDhXAf8CIQgAARgB
oAEoAQA4oDggGGBWARn8AREZBPAGbxOADmMOYA6DDlAEAHAeYx5QLkMuDACgQB6DHiAOEx5DHhAg
QDMeAx5dIPEIAw6DDgMOED5jPhAzbjMQIw5jDiMQEwC4BkAAE0Auugb-DHAOER4jDnABHxgBAAET
AXA9ADGAHRANEQ3QHWIDDBw1rQAfQKwAThFOsAARDqkAYDEAMXAxALgAT4ARED2uAA8PWwFa8QAO
Iw4DLnAOIx4RDnABEwGnAN9wMQA9cA0RDRAdkB2QWwF4BKwAEU6qADEOEQ5bAQCyAG8AMXA9EBGu
ABwJawV-aw6gDosOkAQAAfAQHmseoC4rLpAeix5gDhsOaw4bDkAOOw5LDjsOIA77AdIi4A5rDkse
Ow4LHiseCw47wAdwDosOOw4QPgYA8QkwLmseOw5ADg8aHiseDQ4rHkAOjU5QDo2aAzE9Dj0IADAt
Li2kAxBOkAxxAB5gDxAuDJsMEUwGALAMIQwADC0MkEEATAQAr6AhEAEsAfABIVD8BBwfcO8AGD8u
ay7vAD8G9QAAkQQzDT4tkQQ3LQ6Q8wAA6wAwTABMBACfoCwQDCEM8ABB7gAQD94BjgDcARBO4QYw
LQ4A7wABgQ6ATJAMLQwADCHzABFBBACPASwBECGwIbDdAapTDi0_DR7sACVOkPIAAOwAFEzdAQDY
AjAQLKDcAQ-tABryAA4ZBDBPE3AOQw5gPiMOQAcNFUAHDRdABw0WQAcNEUBIBBFQBw1AcB4TDkAA
EVAHDRNA7wwPCAAFMVAOEzoABAwAMhMOYAYA-wAuIw6QMZAvGAGAMQ2AMQ3aBQwcNMUAL-ACxgBZ
EUDNDQBAAAXGAC8_E8AAJw6TDQ8xAD0JwwMPahJCIh4bahJQDw0OCy5QAEILDDseXhKgWw4rDlAO
Cwx7DtUCwAsMGz4CHjsOMA4bDIASAJIpIQtMCQAxUC47CADwAmBeAh4CGx5gDj0eEj5wDo0O5RQE
BgAAoBJgTQ4tHoAORCMTHYMSDwgAAPAATxAAOqAaIQAaIZAKASoBBABMkEoASs0UKS0wnDIF0C1N
MS44M88tHzZWAVsgkC5WAQGrE0ILDgsuTwEiSx5PATFrDjtPASJ7Dk0BEQtXAVNAHgs8C04BIisM
TwEQThEAAVABUA4CHgIuQAEsEh5UATCNHoBYAS8OkFgBbw7fAg9PAHkJSAqhA28VAw5QDg8WB3Md
YBUPIAcPFREAUB8HDyAvdASCDx8OUA4NHxbTDAW_CfEHPi0_QA4zDgwOMw4wDjMuMw4gDlMOU7oJ
MDMOM7wJsC4zDjMuECOOIxDjugkTY7gJAA8LBwYAALgJEC-IC4ErYDELAAsxUAYAHyAdBAUP0QBK
UVAOIw4MGQUI0QAL1wA-7hDjjwoBD9EALA-qC10FrwAB6gsDmwzfDxgRDQANEQ2AHSAdQLEAHR8X
sQAPAa0ATi6DLhCxADAeYx4zAkMDbgMurwAAngAeI7cAD7EAMw8UFOkIXBEAFhQPCAAEUKA-EAA4
YBEwGCGAYREQAB0UPXBIIB4UVy03LjcyAQAEeAE_LjI2lDkfN4cBZpKQDgseKh4LDoCOBjMsDguR
AVMrDgwOK5EBM0sOS48BAPEKBJEBBYcBACEABGwBWR4bGRsJlQEmGQsPAEIgHhsOiwFwCw5APiIu
K5MBG4qPATIqLiqRAQFxAQ6TAQ_LAUwPJQ2SAAQAIx5gCgAUkAgASA8QLQwcDgApDZ8AASwBoCEg
IVAVAWJPgE4rTkgNTh4uDQEPFQFPUG09N319
:: gfx/2.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA3LTA4IDIxOjI3OjQ0Iixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCIscmV2aXNpb249NzI1XV1sejQAxBUAAJ9gAADzFHtbMF09e2JtcD1weHUA
QyAQEATw8CxmbGFncz0wLHBhbl94CADKeT0wLHpvb209N30sMQB2-zoAHzEfOgQAFz8MAAAEAD--
OsBTADnyAA86DzH-OgAPMe86DzHfOggADxEAFC8POooAHAUOAR8xMQAU-wf-GyD-ISD-MAHfMR8w
XzEfIV8x-zACDQAGEwFfAB8yXwARuRISBP82A-8hAB82BQDwAA82DyX-MAAfJQ8w3zEPMAgAAmAA
AAwADxkAIn8PJf8UAvAULQEZMAgIBIsAAEgAhzAfMR8hHzGfDAAvjzB5ASUPMQAEHDYxABgP6AEO
CgIPEQASL886dQAcL-86pwAdHt_JAA-GAj4fNsYCHQ4xAA-XABqPICAE8P----M0AE0OmQAPSAIP
DxcCKB8f1AQKHwDUBB4WwD8AD1MAIw9MAjQXD3UADIkAP-86BIUAHP8AwCqwOqBKoEqgOg8doDoO
AwALD00FHF-6MP8dsDQAHEAqwDqwjwBfDx06oA4DAA0PkAAgUROPMW8dBAASMAQAlx8wTzYfMD8q
Lw4AG28MACM-HWoAHzNqABiqUE8q-x0ADyrvHQQAL58dtwAcEQ8GAgDdAR-etQIhDh8FDz8AFxbP
gAIfDz4AHQ5SAg8DAAhfDzqgOg2fAB1fHdD-OhA1ABwOWAIPAwAGXw86OqANZQIbsAsMBL82jzEf
No8x1gcxjzAfBAACSgIPDAAJPw8lr68HDBw5ygAXT1QCDwQAAf4KPx0vE48dDyovHS8jnx0vKi8j
zx0vI-8dIzUBD2sADT--OgT5BAceH6UED60HMR45PAYPMQBNAocCHg4DAA8QBQ0PkQBFAIICHg4D
AA8RBSUcOfIJc38xnzA-Nr8EAC_fMGEBPC8xMW4GF1sPOKA6DQMAD14AHQB2Bd9A-ykB3xofKQ8a
vy8PCAAOIw8pZAAfNWQABQ_gBjEPwQAWAYECjkqgSrA6wCrwzQEPPgAMX-86APowNwAfIw86kwFP
sCrwrT0ADQ8DAgcPMgBHAh0CHw4DABMOSQYPYgAQFw8XAlYPLy8hfwwAFCoMAB_-CAAyX98a-ykB
gQUOLzExtwY2Dz0DG0-fOh8pBAAFA1EAHzRRABNfCQT-OoCEACLP-xIB3yIfEg8ivyMPCAAOIw8S
ZAAvMTPpAB0fEgQABQRSAB8yBQMfDzIAqwTqAQ8EAB0O0AIPnQBAFw-6AVYPIy8TfwwAFBIMAB_-
CAAyT98i-xKkAyEEQAIPBAAdDz8BUh-yMgAeP-8c8JcAHg8yAP---------------xT0FUCvFyAe
mA4QDrgOAA7IDgAOGA8gCA0YDQgNKB44DTgNOB4oDRAAEdgCADE4DQgCABAoLQAFDAAAQQC-IA6Y
DkAeWB5wXkCHAD01KA8YiQCzCBweqCwemDweiEyNADUMDSyNAP8FDA08DgAOSHwOEA4ojA4gHpwO
QK6OACLTaC8YDhAOeD0OAA54TZIA8QQMGAwNDC0eOAwYHQw9HigMCAwdEQDRSI0eOJ0eKK0eGB0A
DQIANC0eCAsAMD0e3QIAL-4BhwAddP8XAd8YHxcEAJMvGA8gDxgPIB8IAIIvGB8XPxgPIAQADyAA
AxffBAATPxgAFw8gAAQ0AAQEABc-MABP3xj-F7QAG7R3BgT-F2j-IGUfFwUAvA8XAA7-IGMOIP5j
Tw-zAC00LjA1OTUyMzgwOTUyNFoAoi04LjcxOTA0NzYGAAJpABkyaABwPAoEAP8XKloAPyoe-QMA
AEwOAP4q_B0TM2EARjEuMTYBABI3YAAfNEoDHh8wMgAvAWcC8QufHg4QDr0OAA7NDgAOHQddBy0e
HSc9Jx0eLQwAADsC-hENvyANHg0MlwwNDgAODQx3DA0OEA4dfB0OIA6dDkAeXXEDD3wAMYAdAh69
Eh6tIn8AEQJ-ABMCfwAQEi4AznwiDhAOPXIOIB4NgmMDD4AAEyBvHkUAcX0yDgAOfUKDAPcJPRIH
Ih4dJx0SJxIeLQcdMgciHk2CHj2ShQAgHh2DAL8eDRJ8Ih7SHtL_AXsAHUD-FwHSOgDDHiIHUgci
HhInMicSDAAAFgAQAmoA7wINlw0CHhINdw0SHiJ9aQAhIHdEDANwjyAPF-8gNgUAEAIFABABFQP1
AEUfF08gHxe-ID8XbyAfFyQAIj8gGQAxTyAPBAAxHyAfIQAFMgAXrxUACTYAEx8ZAAA2ADFfID8Q
ABQ-OgAzDyAPBABCHxffIBAAGk9CAFEvFy8gLz4AY38gLxdfIMADDb4ANP8XadkDDwUA9g-iBAhG
Ny41MwEAAy8CXC0xLjMxgAQK4ATRdBIEEP8TYCD_YgD_-wEAfU4A-mIg-mBDBUgzMi42zQQDYwA4
Mi4zAQADoQIP5ARm8gucDhAOvA4ADjw-IEwOAA4sDTwNPB48XTwePAoACAYAARYAIT8Qxgf_BCwN
Ow0sDhAOPD08DiAOnA5AHlzsBA_EADExLA8QCAAhHBsHAMMMKx48XTsePA07DTuHAAAIAM88PUsO
EA4siw4gHpvzBCWCfB8QDhAOjC2KABAMXgiyLAs8Cz0ePFs9HjwKAAcGAOEsDVs9HhwdCz0LPR4M
LQcAPk07TU8ID-gEFEDfEB8XBADxAE8QPyBPEB8XPxAPIDwOPwoAqV49Hxc9DjwOPRsGABBeCgAk
PQ4GAI9NPk0b3Rvd_34AHi-w8DIAswHGAfcFmw4QDrsOAA5LLyBLDgAOWw1bHmsEAP4cWw0JDUse
Sw0pDTseOw1JDSsOAA4rDUkNGw4QDjsNKQ0rDiAOOy0rDkAeW9ACD4MALXFLAx5rDTsThQAhGyOG
ABEzhgATI4YAAAgAAIYAzzMOEA4rAy1DDiAek88CJXJ7Ew4QDosjiAAhCzOJAGELQx5rDVMEAOFb
Aw1THksDDQkNQx47A4oAICsDgwAxHhsTBwAhCzMVAF9TLUMe09ICIsnTHtMeUy8gQx5jDVMEABFT
dQARQ18AETNsAAIGAB9DcQApL-DwMgCzAbwB8RGaDhAOug4ADsoOAA5aDyBaHloNCg1KHmoNWh7a
HjoNCgIAlSoeKo0aHhoNCAIAswoOAA4ajQoOEA4qJACeGg4gDpoOQB5azQIPiwAptToPGR5qDToc
HqosjwBZLB4qjRyPABEMjwAxHA4AjwARDAwOPhAOKvsND48AGHB6HxkOEA6KpQUiij2TAPEECk0e
WgwKDE0eagxdHlp9HjoMDQIAlS0eKowdHhoMCAIAlQ0eGg2MHR4KLSIAD64FJjQZHxcEAPcCbxkP
IF8ZHxdfGQ8gDxkPIE8UAAAgABM-GAAEBAD0Ay8ZHxcvGY8gHxkfFx8ZDyAIDgIAEQ8aACCOHe4F
EQ0CAG8tHN0c3fwNA_v1CpcOEA63DgAOVwhXDgAORyhHHlcoRx5HSDcEAAAQABFnHgARtywAfiAO
lw5AHlf0Ag9yACzwBycPEh5HSBcdHkdIBy0eVygHPR5nCAeCECBnXS8Av20OEA43fQ4gHgeN4AIl
gXcfEg4QDoctfgAhFz1-AJVNHlcoTR5HSD0EAP8ANx0oTR4nPQhdHhe9HgfNxwInMBIfFwQAoG8S
CF4fF14oTh0EADVOSD4EAAAQAFJuCF4d3gIAH-2LAiAPMgD-ef8RCAgEIBZQF0APIw8QHyMgDi8Q
HhAeDS4QFw0nEF4QXgB-AB8PRwHlsBAmMEggHyAoIA44AwB-HiggSDAmII0BIt8-EDA3IF4QVxBe
EFcAQgAibw8cDxAfHM8BLABNAPIEHyBQBQ8VQAUuIAUOBy4QBSceEAkAAQUAH06eACDyAUAGEAZg
BhAXEAYgBwAHEAcGABAAAgBPFyAHUFEAHf8LQCgwOCAHKA8YECcIDhA3BhA3BiAnBjAXBkDzAT0f
NjEAXV8SBPD-ETIAHPAgMH8XYA5xDkAOkQ4gDhEVAUURDhAOAQUPFg8gBS8WDyAPFgUBDhAOBR0P
ID0MHQUdAFAdBT0FHRUAMBF9ETUA8AFdEQ4wDgJxAg4gDgIfFVEbShTgAhsdHxgLHSsCHistCi1g
D-8QGxUIGxUrDiAecR5ADnEOUA4hHiEOYA8THxEQGQ8TMLcAdkAIDxhbtgAxCApbtgDQCjstBQ4Q
HnENBQ4wDrwAD7gAKi-wBHABYg_0AEMQILYAIh8WCAACtwAADgARPxYAAbsAoQ0PIAUMHQwFDA3A
AH8FDQUdBQ0FxgBgDn0DDzEAbg_uAy47sQ4QBAAwIA6RVQEhfxVWARGdUwGMvQIe3Q4ADr16A18v
ExAsMH8AVhGdEQJIHnEMBUYDTy8TECuOAh8PBAEuDgABD3wAjg6PAg8xAJ7wDBUiBPAOTyDgDksO
wA4rDh8jCw6gDisODzIPIwQAMAsOkA4AFCQQAAEPAIwfJA8RDxAPMg0AgTsODyQfMg8aCwARPQYA
IC0eTgCgDS6gDgsOCw4fMl4AMAsPDWEAAFsA4QsPDUsOGw5wDgsMaw4LCABAGy4CHgoA9hQbDDsO
Gx6AHgs8DhsekC4rDhseoE4CHgIOoA4tHhIeoA59DgQA0B0OTQ6wDh0OAC0OsD4FAP8YDxAuAC0O
oCoeAA4dDpAaARoQOoAaAQoBIAohkAEqIAEqAZAqIEowMzcZACoBHyMqAX0yGw5gKgEAFAABLAFh
DgsOgC4rCAAQkDABYB6gDj0SHh0BoC0OwA4tDh0OwA6GEHDQDj0O0C49KwFAPj0OkCoB-wktDoBK
IE5gCiEKQDpwKgFACjFwOjABOiAmAQwPUAKxgS6QDo0OkA49ZwAhLR4GAAAeHRAeXAIhAE4GADEO
DxBIASEAKmwC-wYaARqwSgEKAcAKIQAqwAEqEBrASoBRAq4PewMWUT0OLQ6gJQE1LQ6QCAAzHQ4Q
CAAQIE8CAwgA-whwPxBAOnAKIUAKIXABKkABKgFgSjBKEC0BDA8KBR4PMQD-UvEOFBkE8AtPE9AO
Qw7APiMOoA4-FQ4TDqAOHx8PIAcKADkPFg8MACEfFgsA4CMOIw6wDgMOIw7QHhMOQABAsA4THkIA
XwMOEw4TCAAHQx4TDiNAAP8OoA4TDkMOgE5DEWARHkAOMTBBYEEgMYAhQBGQETDGAJAgkB5AABCQ
EwC_Mx6AEy4jHhFgERPJAA-xAXkApgQUDaYEMgtPI0cERzIPIx_oBCAPMqgEGB_sBBEPnQSMLyQP
EA8RDzIRAPAIJA6QDg0fMg0MDRwNDpAOjxoOkB5qHoCWBPEaHioeCQsOYA4LCRsOLA4bCQsOQA4L
CTsODA47CQsOIA4LCVsOWwkLDgAiAPEKOw5rCQseCwkrHgIuAksJCx4bGSsOKw4CCzoARgAeGykO
ACcQLhsA9QkwPgIuAi4bCR5ADgoeIh4KTlAOih4rDkAGAPAFGw5QHhouKg4AHmBOAA4qDpAeLxAI
ACGgOAYAMQgRCAgA-wQxADiwMQAYIbAREAgBKAHwAEgwXwEdHyJfAZkoCTtfAS8LOV8BMyEaHl8B
gD6wOAAIHgiwXQH-BDiwARgBAAghsDgAASgBsBggOEC4Ah4PWQHkIg4qWQEQDgYAMAoekAgAEU4G
ADA-EKAHAP8HCBEIsDgAMaAhGAAxkAEoAQgQEaBIsLgC-yOxoD4ATqA_AD8QsDhXAf8CIQgAARgB
oAEoAQA4oDggGGBWARn8AREZBPAGbxOADmMOYA6DDlAEAHAeYx5QLkMuDACgQB6DHiAOEx5DHhAg
QDMeAx5dIPEIAw6DDgMOED5jPhAzbjMQIw5jDiMQEwC4BkAAE0Auugb-DHAOER4jDnABHxgBAAET
AXA9ADGAHRANEQ3QHWIDDBw1rQAfQKwAThFOsAARDqkAYDEAMXAxALgAT4ARED2uAA8PWwFa8QAO
Iw4DLnAOIx4RDnABEwGnAN9wMQA9cA0RDRAdkB2QWwF4BKwAEU6qADEOEQ5bAQCyAG8AMXA9EBGu
ABwJawV-aw6gDosOkAQAAfAQHmseoC4rLpAeix5gDhsOaw4bDkAOOw5LDjsOIA77AdIi4A5rDkse
Ow4LHiseCw47wAdwDosOOw4QPgYA8QkwLmseOw5ADg8aHiseDQ4rHkAOjU5QDo2aAzE9Dj0IADAt
Li2kAxBOkAxxAB5gDxAuDJsMEUwGALAMIQwADC0MkEEATAQAr6AhEAEsAfABIVD8BBwfcO8AGD8u
ay7vAD8G9QAAkQQzDT4tkQQ3LQ6Q8wAA6wAwTABMBACfoCwQDCEM8ABB7gAQD94BjgDcARBO4QYw
LQ4A7wABgQ6ATJAMLQwADCHzABFBBACPASwBECGwIbDdAapTDi0_DR7sACVOkPIAAOwAFEzdAQDY
AjAQLKDcAQ-tABryAA4ZBDBPE3AOQw5gPiMOQAcNFUAHDRdABw0WQAcNEUBIBBFQBw1AcB4TDkAA
EVAHDRNA7wwPCAAFMVAOEzoABAwAMhMOYAYA-wAuIw6QMZAvGAGAMQ2AMQ3aBQwcNMUAL-ACxgBZ
EUDNDQBAAAXGAC8_E8AAJw6TDQ8xAD0JwwMPahJCIh4bahJQDw0OCy5QAEILDDseXhKgWw4rDlAO
Cwx7DtUCwAsMGz4CHjsOMA4bDIASAJIpIQtMCQAxUC47CADwAmBeAh4CGx5gDj0eEj5wDo0O5RQE
BgAAoBJgTQ4tHoAORCMTHYMSDwgAAPAATxAAOqAaIQAaIZAKASoBBABMkEoASs0UKS0wnDIF0C1N
MS44M88tHzZWAVsgkC5WAQGrE0ILDgsuTwEiSx5PATFrDjtPASJ7Dk0BEQtXAVNAHgs8C04BIisM
TwEQThEAAVABUA4CHgIuQAEsEh5UATCNHoBYAS8OkFgBbw7fAg9PAHkJSAqhA28VAw5QDg8WB3Md
YBUPIAcPFREAUB8HDyAvdASCDx8OUA4NHxbTDAW_CfEHPi0_QA4zDgwOMw4wDjMuMw4gDlMOU7oJ
MDMOM7wJsC4zDjMuECOOIxDjugkTY7gJAA8LBwYAALgJEC-IC4ErYDELAAsxUAYAHyAdBAUP0QBK
UVAOIw4MGQUI0QAL1wA-7hDjjwoBD9EALA-qC10FrwAB6gsDmwzfDxgRDQANEQ2AHSAdQLEAHR8X
sQAPAa0ATi6DLhCxADAeYx4zAkMDbgMurwAAngAeI7cAD7EAMw8UFOkIXBEAFhQPCAAEUKA-EAA4
YBEwGCGAYREQAB0UPXBIIB4UVy03LjcyAQAEeAE_LjI2lDkfN4cBZpKQDgseKh4LDoCOBjMsDguR
AVMrDgwOK5EBM0sOS48BAPEKBJEBBYcBACEABGwBWR4bGRsJlQEmGQsPAEIgHhsOiwFwCw5APiIu
K5MBG4qPATIqLiqRAQFxAQ6TAQ_LAUwPJQ2SAAQAIx5gCgAUkAgASA8QLQwcDgApDZ8AASwBoCEg
IVAVAWJPgE4rTkgNTh4uDQEPFQFPUG09N319
:: gfx/3.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA3LTA4IDIxOjI3OjUxIixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCIscmV2aXNpb249Nzg3XV1sejQA-A4AAElSAAD0KHtbMF09e2JtcD1weHUA
QyAQEARArxEgHpEOEA6xDgAOwQ4ADhEPIAENEQ0BDSEeMQ0xDTEeIQ0QABHRAgAxMQ0BAgAQIS0A
BQwAAEEA8wogDpEOQB5RHnBeQCxmbGFncz0wLHBhbl94CADPeT0wLHpvb209N30shgAbJSEChwCz
ARIeoSIekTIegUKLADUCDSKLAP8FAg0yDgAOQXIOEA4hgg4gHpIOQK6MACFgYSIOEA5xTAAmcUKP
AKECDSIeMQ0REg0yjwAREhEA0UGCHjGSHiGiHhESAAICADQiHgELADAyHtICAC-_AYUAHDH-EQE5
AFMeIg8gAmkAhDINMg0yHiINEAACIQAxMg0CAgAzIh4iCgAMdAAfMXQAEbR3BgT-F2j-IGUfFwUA
ww8XAA7-IGMOIP5jEEsAHzJLAAMaMUsAEERLAHCPIA8X-yA2BQAQAgUAEAFUAPUARR8XTyAfF78g
PxdvIB8XJAAiPyAZADFPIA8EADEfIB8hAAUyABevFQAJNgATHxkAADYAMV8gPxAAFD86ADMPIA8E
AEIfF98gEAAaT0IAUS8XLyAvPgBjfyAvF18g-wANvgA0-xdpGAEPBQD2DiECD_ACBRwy4AIr8PAx
ADMtMjYzADItMTM1AD8wLjU3ADQB0wPxC58PDhAOvQ4ADs0OAA4dDl0OLR4dLj0uHR4tDAD_Fd0e
3R4NvyANHg0MngwNDgAODQx_DA0OEA4dfB0OIA6dDkAeXdoED4EANpAdDy8evRwerSyFAHAMHg0L
ngsMhQBAC34LHC8AznssDhAOPXwOIB4NjNQED4YAGPACbw8vLw4QDn8PPy8OAA5-D08HAPcNHw8O
PR8vDiweHS4dHC4cHi0OHTwOLB5NjB49nJEAIB4djwC-Hg0ceywe3B7c-gGHACJ0-xEB3y8fEQQA
_wYvLw8RXy8PES8vHxEfLy8RPy8vER8YAAQsAFEPL78gDwgAUQ8gnxEPDACCHy8PIH8RDyA0ACZ-
IDAALP8RAwUPoQADD50CBw83AL8CigITIYoC8gM9PyBNDgAOLQw_DD0ePVw9Hj0KAAgGAAEWAEE-
Oww9KQAwOwwtiQIuPD0UAw_KAD8xLQ88CAAhHRsHAGINKx49XDuOABE7LQAROggAzz08Sw4QDi2L
DiAemxwDKvAGfyEfPA4QDo8hLzwOAA4-IT8gDyE-CwDBLyEPID4NPzwePyFdBgA-DT4NCAAA8gQv
IQ88XTweHyEcDT87DTweDyEsCQA-TD1MMQMsMDwfEQQA8QJPPD8gTzwfET88DyA-EQ8gPwwAPV8g
PxQADgwADSwALTsPDAAEYAACcAAPQQMnDzcAYh8zbgBRArcCExm3AiFNL7cCV10MXR5tBACgXQwP
FQxNHk0MK84CQQxLDC2vAjBLDB09A64MKwwtDiAOPSwtQQMPigA3gk0PKR5tDD0bjQBwHSseTQwq
DD4DMUoMK44AAggAED0WAAA-Az8LLEtBAy8wGR8pQQPQGS8pDgAOTxkvIA8ZPwsA5V8ZDyAPGU8p
Hm8ZDyBfBwBBXxkPKQkAEU8JAIEPFQ8gTykePw0AgS8VDyA-KR4vDQCmTxUPIC8pHh8ZHw0AAFsA
BScAb10vIE0e3WEDKDApHxEEAJFfKS8gTykfEW_YAA8IAAcVX68ANR8RT4cANR8RP6AACgwACCQA
BGQAT98p-xGxACMFvAIfMGEDWg_lAFIBSQLxEZUOEA61DgAOxQ4ADlUPIFUeVQ0FDUUeZQ1VHtUe
NQ0FAgByJR4lDxINDAIAYxUeFQwCDQIAYwwFDgAOFRoAcw0MBQ4QDiU1AJ4VDiAOlQ5AHlV4Aw_h
AC61NQ8THmUNNRwepSylABEspQASCwIAQxweFQujACENAuEJExUaABEN5wkApQAAsgAA7QlvJYwO
IB6cjwMqcHUfEw4QDoV9BCKFPakA8QIFTR5VDAUMTR5lDF0eVX0eNSEBMA0MLacAIgwLAgAQHacA
EwwCAFMLDR4VDRkAABsAJQUtMwAf3XIDKjQTHxEEAPcCbxMPIF8THxFfEw8gDxMPIE8UAAAgABM-
GAAEBACqLxMfES8TDxIPIAQA0R8THxEfEw8SAg8gAg4CADMPEg8sACIODQIAER9QACEODAIAjiwf
Edwb3PsBGAMPhgPxI58xXQYwXQJdYwalIk0eXSJNHk1CPQQAABAAEW0eABG9LAAOFgoPeAA58A0t
DyAeTUIdHB5NQg0sHl0iDTwebQINTA4ADm1cLwAfbCUNAR81gQAfQH8xHyDIBjAxLyC9BlExAh0-
IIkAlUweXSJMHk1CPAQA-wA9HCJMHi08AlweHbweDcznCSwwIB8RBACgbyACXh8RXiJOHQQANU5C
PgQAABAAUm4CXh3eAgAf-boCJQ83AGIfMDcA-wAfNG4AWh8xIwslHzKnACQPNwD-------------
------_e8QUICAQQLzEwAgECAQIgHyABAgEgDgwAEA4TACAgHgsAABAAXwEwLzEg5iELLjEwWgD2
ADAPMTAPLA8rDywPITAiAQwAAQcAPysPIRIAAAA1AB8QawAd8QYgHyFQHxFADi87IA4NDysNDA88
EA6oFiAQDgYAEQsOAEELDBAOyBYfAGAAH9EgUAUPM0AFDg80DiAFTBbwAhAFDQ8oDxkODRAFDgwP
JQ8UEgBCDhsNEB8AD2QAHi-wMDIAs-kNIBZQF0APIw8QHxIgDyMPIB8QHxIQDyMPEg8QLwkAEk8F
AA_NASDyAzBADhAOYA4QHyEQDiANAA0QDQYAEAACAE8dIA1QUwAd8QZAIjAyIA8hIg8TEC8hAg8T
ED8hDxEFAL8gLyEPETAfIQ8RQG0BHw8yAP---28OFQcPMgD---------T18SBPD-ETMACx42ZAAP
MQD-Mw_JAf_FDzEAHfAMFSIE8A5PIOAOSw7ADisOHyMLDqAOKw4PMg8jBAAwCw6QDgAUJBAAAQ8A
jB8kDxEPEA8yDQCBOw4PJB8yDxoLABE9BgAgLR5OAKANLqAOCw4LDh8yXgAwCw8NYQAAWwDhCw8N
Sw4bDnAOCwxrDgsIAEAbLgIeCgD2FBsMOw4bHoAeCzwOGx6QLisOGx6gTgIeAg6gDi0eEh6gDn0O
BADQHQ5NDrAOHQ4ALQ6wPgUAkA8QLgAtDqAqHvgy-wuQGgEaEDqAGgEKASAKIZABKiABKgGQKiBK
MCQ3GQAqAR8jKgF9MhsOYCoBABQAASwBYQ4LDoAuKwgAEJAwAWAeoA49Eh4dAfAGLQ7ADi0OHQ7A
Dj0ODQ7QDj0O0C49KwFAPj0OkCoB-wktDoBKIE5gCiEKQDpwKgFACjFwOjABOiAmAQwPUAKxgS6Q
Do0OkA49ZwAhLR4GAAAFNRAeXAIhAE4GADEODxBIASEAKmwC-wYaARqwSgEKAcAKIQAqwAEqEBrA
SoBRAq4PewMWUT0OLQ6gJQE1LQ6QCAAAbjACCAAQIE8CAwgA-whwPxBAOnAKIUAKIXABKkABKgFg
SjBKEC0BDA8KBR4PMQD--xcAeQMUDXkDMgtPIxoDRzIPIx97AyAPMnsDGB9-AxEPcAOMLyQPEA8R
DzIRAPAIJA6QDg0fMg0MDRwNDpAOjxoOkB5qHoBpA-EaHioeCQsOYA4LCRsOLA4bCQsOQA4LCTsO
DA47CQsOIA4LCVsOWwkLDgAiAPEKOw5rCQseCwkrHgIuAksJCx4bGSsOKw4CCzoARgAeGykOACcQ
LhsA9QkwPgIuAi4bCR5ADgoeIh4KTlAOih4rDkAGAPAFGw5QHhouKg4AHmBOAA4qDpAeLxAIACGg
OAYAMQgRCAgA-wQxADiwMQAYIbAREAgBKAHwAEgwXwEdHyJfAZkoCTtfAS8LOV8BMyEaHl8BgD6w
OAAIHgiwXQH-BDiwARgBAAghsDgAASgBsBggOEC4Ah4PWQHkIg4qWQEQDgYAMAoekAgAEU4GADA-
EKAHAP8HCBEIsDgAMaAhGAAxkAEoAQgQEaBIsLgC-yOxoD4ATqA_AD8QsDhXAf8CIQgAARgBoAEo
AQA4oDggGGCeBTwfNTEAjQl5A39rDqAOiw6QBAAB8CIeax6gLisukB6LHmAOGw5rDhsOQA47DksO
Ow4gDvsBDgAOSw5rDkseOw4LHiseCw47zgVwDosOOw4QPgYA8QkwLmseOw5ADg8aHiseDQ4rHkAO
jU5QDo2oATE9Dj0IADAtLi2yARBOcQlxAB5gDxAuDHwJEUwGALAMIQwADC0MkEEATAQAr6AhEAEs
AfABIVAKAxwfcO8AGD8uay7vAD8G9QAAnwIzDT4tnwI3LQ6Q8wAA6wAwTABMBACfoCwQDCEM8ABB
7gAQD94BjgDcARBO7wQwLQ4A7wABYguATJAMLQwADCHzABFBBACPASwBECGwIbDdAapTDi0_DR7s
ACVOkPIAAOwAFEzdAQDYAjAQLKDcAQ-tAA0P6wMdHzQxAI0JoAIPKA5CIh4bKA5QDw0OCy5QAEIL
DDseHA6gWw4rDlAOCwx7DrIBwAsMGz4CHjsOMA4bDD4OYSsOQB4LTAkAMVAuOwgA8AJgXgIeAhse
YA49HhI_cA6NDqMQBAYAAF4OYE0OLR6ADh06Ex1BDg8IAADwAE8QADqgGiEAGiGQCgEqAQQATJBK
AEqLEFctMC4xNgEAEzdIAUcxLjgzAQAOBwMPVgFQIJAuVgEBaQ9CCw4LLk8BIkseTwExaw47TwEi
ew5NARELVwFTQB4LPAtOASIrDE8BEE4RAAFQAVAOAh4CLkABLBIeVAEwjR6AWAEvDpBYAW8P3wIK
DzEA9g_DDukIywsAhQ4PCAAEUKA-EAA4zwswGCGA0AsQAIwOPXBIII0OVy03LjcyAQAEeAGDLjI2
MTkwNDcGAA6DEw_HAVuSkA4LHioeCw6AEgQzLA4LkQFTKw4MDiuRATNLDkuPAQBSBwSRAQWHAQAh
AARsAVkeGxkbCZUBJhkLDwBCIB4bDosBcAsOQD4iLiuTARuKjwEyKi4qkQEBcQEOkwEPiwFMD4YJ
kgAEACMeYAoAFJAIAEgPEC0MfQoAigmfAAEsAaAhICFQFQFiT4BOK06pCU4eLg0BDxUBT1BtPTd9
fQ==
:: map/
:: map/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA1LTAzIDEzOjI2OjA5Iixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCJdXWx6NAAEAAAAAwAAADBuaWw=
:: map/0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA1LTAzIDEzOjI2OjEwIixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCIscmV2aXNpb249NjkwM11dbHo0AEoJAAB1QAAA8Ah7e2JtcD11c2VyZGF0
YSgiaTE2Iiw2NAMA_wIiMDAxYjAwMTQwMDMzMDAzNAQAXzUwMDIwHAAIUjEwMDFkRAAvNDYEAABS
NzAwOTcMABM5FABiMTUwMDEzdAAPBAAbDjwADwQALgO8AKs4MTAwM2IwMDNjBABfZDAwMjgcAAgX
OUQAQDYwMDjsAPMCZTAwOTAwMDkxMDA0ZjAwOWYUABJlCAAEMAAvMWMEAB0OPAAPBAAuA1AA0Dg5
MDAzYTAwMzIwMDMMAAAQAVA2MDAzZckABxwAVmYwMDM3HAAnNThEAPARZTAwOGYwMDBiMDA5ODAw
OTkwMDU3MDBhNzAwMGQwMGEEAhZkMAAfMAQAIAU8AB9jBAAzBFAAIjg06AAPBAAdFzYAAR8wBAAA
IjVm-AAEBAAuYTUwAA8AAXISY9AAYjVhMDA1YgwACAQAZjQyMDA0MRAABQQABwAEIjcw4AMiYjMI
AAAEACZhMgwABAQABDAALzQ2BAAIFjf0AA8AAVEXOQACEDTAABs0BAAAuAEA7AMROPMAIDAx_AAA
GQUHAAIiNzjgAyJiYggAAAQA9gNhYTAwYTAwMGExMDBhNDAwYTMwAC80ZQQACANIAw8AAVUnNTkA
AQCcABtjBAAfZAABDwSkAFBiYTAwOFQC0zgwMGIyMDBhODAwYTkIAAjEAA8EAAgmNTcMAA8AAVEv
NjEAASQWYUQAJjkyqAAiOTMAARA4DwCANDAwYjUwMGIcAxY3MAAELAAPOAQGHmIEAAU8AB9jBAAz
DwABAWs1MzAwNTQEAA8AAwEbYQABFmGoACc5YgABgGMwMGJkMDBiHAMWZjAAHzAEACAFPAAfYwQA
MwRQABM2-AAPBAAeB9ADGzAEAAQAAQwEAA4wAA8AAUMPLAkBFzYMACYxNFAALzE0BAAXBPwALjE0
BAAmMDcMAA8EACkmNjYMAC8xNGwAJATcABZjBAAXNwwALjFjJAAPBAARBQABHmMEACYwZgwADwQA
KSY2ZQwALzFjbAAkA9wALzBkBAAHBSQAHzkEAL0PAAH-HC8xNHQNDQ_gAx8PSAAGHzcEABgPfAAA
Jjc3DAAIBAAmMjP8AA8AAR4fYwQACA4kAA_gAwQPSAAUH2YEABgPfAAAJjdmDAAIBAAPAAEpHzAE
AAgFJAAfNAQAKwVIAB9kBAAXBTQADwQAEA8AAQUvMTQEAAUPAAHUH2MEAAUPAAFcDwQABG82MzAw
MjdcBAEPoAATDwABDS8wNQQABQ8AAVwfYwQAAyM2YgABBOADCFwED6AAEA8AAQUQMqASFmLsAA8A
AW0vMGQEAAcmMjcMAAgEAA_gABEPAAEGB_gADwACcgAwFR82BAABDwAB1C9kMAEABA8AAdcnMWLc
BAQEAA8AA9UDSAArMWMEAA8AAUQBBAAfNQABfyowNAQAHzEEAAkENAAPAAJxB6QHDwQAIgRIABo0
BAAvMWMEAAgfNAQAFyYwNvwADwABQg54Cw8EABsESAAfNAQAFy8xYwQAFxMwrBkPAAFGDwQALAVI
AB80BABEHzkAAb8ONAgPBAAHJjEz-AAPAAEdLzE0BAAIBLgADwQALAVIAB80BAAXLzM4BAAXJjFi
-AAPAAEeH2MEAAgEuAAPBAAsBUgAHzQEABcmMWTgAA8AAUkfMAQACAwkAA6UEQ4EAA8kABIOKAAP
BAAXAzgADwABBScyNSwABwQADcQGDwABIQMQAC8xYwQABQ8kABQOKAAPBAAXAzgADwABCgQsAA88
EgkL3AAPBAABDCQABRAAH2QEAAcMNAAPXAANKjM4BAAhMDJbGQUQAAwEAA84AAEMAAEvMGKAABcf
MCQAEAVoBQQ0AB9kBAAHBSQADwQADAQoAC8zOAQAEBMwGAEHAAEqMTQEAA8AAUIbNAQABDQAH2QE
AAUPWAATJjBiKAAvMzgEABsEOAAqMWMEAA8AAUIbYwQABDQAH2QEAAUPWAATJjBiKAAvMzgEABsF
YAAeOQQADwABPQ80AAYfZAQABQ5YAA8AAQ4H3AIPBAAFCCAABWAAHzkAAWcFEAMfNBwNEw8kAAIE
gAAO-AAPBAQGJzM4OAAfOQABaB9jlBgPDyQADgNMAC8zOAQAGwQ4AAn0AA_EARANuBoESAAPBAAY
BTQAHzQEAC8ETAAvMzgEABsFhAAMAAEfYwQACwlcFhdjSAAPBAAYBDQALzE0WAEIB6QJLzA0BAAH
BEwALzM4BAAbBDgADAABLzBkBAAbBUgADwQAGAQ0AC8xY1gBCBdjXAAfNAQABwQkAC8zOPgDEwQE
AAVcAA8AAWgvMGRcABQfNAQABwQkAAXgBQvoAA-8BQEnMzhcAA8AAbgE6AEM7AAOBAAPAAHIDwQA
DQMgAgVcAA8AAd0DBAAFXAAPAAE0BbQFHzTYCAEPBAAkA1wALzA0BAAHBCQALzM4BAAbBVwADwAB
NR9jBAABD-QVLB40BAAmNjIMAA8EABUmNjUMAAwEACYwOQQALzE0BAAgAwABLzA5BAA-LjFjBAAm
NmEMAA8EABUmNmQMAA-wDQUmMDkUAA8EABcPAAEzIzE1GBAWMxQADwQAYh9iBAAfBAABLzE0BAAD
BFwALzE0BAAIAEwDHjBIAQ8EAF4fYgABKB9jBAADBFwALzFjBAAIBwABDpwmDwQAEAMoCy8xNAQA
Fy43NkAALzBiAAEnCAAwDwQAHQBEACIyZWwiDggODwQAEA6EAQ-IDBsDQAAfMAQAIAgALw-8MgUP
ADMVDrgJD8wGHB9kBAAjBUAADwQAIAwALw-8MgIPADMUCKAJDwQAGQRAAC8wZAQAIwVAAA8EACAF
PAAP-DEJDwAzFC8zOAQAIwWEAB9kBAAjBUAADwQAIA8AAS4HADIvMzgEACMFhAAfZAQAIwVAAA8E
ACAMAAUPAAHlLzYx-DMIDwA0CRYzRAAvMzgEABMMKAUEQAAvMGQEACMFQAAPBAAgDwA0LhY5RAAv
Mzj8ABQLJAUEQAAvMGQEACMFQAAPBAAgBTwAHzkEACcEaCovMzgEACMFhAAfZAQAIwVAAA8EACAE
PAAvMjYEAOXzDSIpLGhpZGRlbj1mYWxzZSxwYW5feD04MS41ODMBACExNxYAhXk9LTQyMS4wGACy
NSx0aWxlX2g9MTYKABB3CgCAem9vbT0xfX0=
:: pal/
:: pal/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA2LTI4IDE4OjA5OjQwIixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCJdXWx6NAAEAAAAAwAAADBuaWw=
:: pal/0.pal
b64$LS1bW3BvZCxyZXZpc2lvbj0xMjgyLGNyZWF0ZWQ9IjIwMjQtMDYtMjggMTg6MDk6NDAiLGxv
Y2tlZD17WzBdPXRydWUsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2Us
ZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFs
c2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2Us
ZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFs
c2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2Us
ZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFs
c2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2UsZmFsc2V9LG1vZGlm
aWVkPSIyMDI0LTA4LTE5IDIyOjAyOjU0IixoaWRkZW49e1swXT1mYWxzZSxmYWxzZSxmYWxzZSxm
YWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxz
ZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxm
YWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxz
ZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxm
YWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxz
ZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxmYWxzZSxm
YWxzZSxmYWxzZSxmYWxzZSxmYWxzZX0sYmdfY29sb3I9MCxibGFja2VzdF9jb2xvcj0wLG9rcGFs
X3ZlcnNpb249IjAuMC40IixoaWRkZW5fdG9nZ2xlcz17WzBdPWZhbHNlLGZhbHNlLGZhbHNlLGZh
bHNlfSx0ZXN0X2N1YmVfY29sb3JzPXtbMF09ezE1LDMxLDR9LHszMSw0LDIwfSx7NCwyMCwyMX0s
ezEwLDksMjV9LHs5LDI1LDI0fSx7OCwyNCwyfSx7MjYsMTEsMjd9LHsxMSwyNywzfSx7MjcsMywx
OX0sezI4LDE3LDE5fSx7MjgsMTIsMTZ9LHsxMiwxNiwxfSx7NiwyOSwxM30sezI5LDEzLDE4fSx7
MTMsMTgsMX0sezcsMjMsMTR9LHsyMywxNCwxM30sezE0LDMwLDE4fSx7Nyw2LDIyfSx7NiwyMiw1
fSx7MjIsNSwyMX0sezEsMSwxfSx7MSwxLDF9LHsxLDEsMX19LHdoaXRlc3RfY29sb3I9N11dbHo0
AO0BAAAVAgAA9QV1c2VyZGF0YSgiaTMyIiw2NCwiMAEA8CdkYTY1NWUwMGUwM2MyODAwZjY4ZjM3
MDA1YzNjMGQwMGZmZTljNTAwZWVmZmE5MDBiZWViNzE6ACA0ZQYA4GJkZmZjYTAwOThkY2ZmEgAQ
NUcA8BQwNjI2NGRjMDAzZDM0YTUwMGNjNjllNDAwYTMyOGIzMDAxNQIAAGAAAAEA9gEwMDRmMTUw
NzAwZTE4Mjg5iAAwY2M4GgDwGDA4NzE2NDYwMDhjZDYxMjAwMTM5ZDA4MDAyMGI1NjIwMDQxNWQ2
NtEA8AQyMDMwMDA5YmEwZWYwMDIxMTY0FwDwAjU5Y2ZjMDBmZWM5ZWQwMDM0AgBAMDBkNwIAYDAw
MjMxN1gAUDgyM2Mz_ABQNWI3ODSgAPADYmIzMTAwOTM5NzE3MDA2YWI0CABgNThkMzMy8ADANjA0
YjAwMGE5OGFjCAAiODkIAfAFMTc3ZDAwYTY3NWZlMDA1YTE5OTFQAIA4MmNlMDA3YgIAAC8AAAIA
8AcwMGM1OTc4MjAwYWQ0ZTFhMDBhZTZjAAFRZTJkN2IoASBlNxAAQDM3NmThAEExNzI4AAHxBDVl
MmNkMDA3MWE2YTEwMDViYTiAADAyNGGYAUA2YTMxCAAyZTJjmABwMTAxMDEiKQ==
:: sfx/
:: sfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA1LTAzIDEzOjI2OjA5Iixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCJdXWx6NAAEAAAAAwAAADBuaWw=
:: sfx/0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI0LTA1LTAzIDEzOjI2OjEwIixtb2RpZmllZD0iMjAyNC0w
OC0xOSAyMjowMjo1NCIscmV2aXNpb249NTg3N11dbHo0AA0BAADTFwAA-yxweHUAAygAAAQABA9A
EAIOAAGgASACoA4ADxAADfDKAQIDBAUGBwAP-5AICQoLDwwPDQ8ODw8AD--w-wEA6-8n0gEQBg8g
EAEgASAB8AACEAIMEAEgDyEgATAPQPDDDygP--DGD-gKD-8PgA-3Dw0B8AkBEAYMMAAcIg9AMQCD
D2-gAhACDz0zAE-wxw9CYgAdDzAA------9FH-8BAKz-Q8gPQAACQA8bDx5vNT82D04PUR9UH1Yf
Vw9WHz9vOQ8f--8QAAGigBFiAf4QDz0PP19AXz8PPg89TzwfOx86LzlfOA85HgH_CvBwD0AADxBA
-rAKAP-------------------3xQ-rDw-zk=
:: character.lua
--[[pod_format="raw",created="2024-05-05 22:21:00",modified="2024-08-19 22:02:54",revision=6708]]
include './types.lua'
include './util.lua'

character=entity:new({
   col_point = { x=0, y=0 },
   select_point = { x=0, y=0},
	i_dir = direction.down,
	spd=0.60,
	anim_spd=1,
	health = 60,
	pain = 10,
	hunger = 10,
	thirst = 50,
	state = "idle",
	start_idle = nil,
	start_move = nil,
})

man=character:new({
	x=90,
   y=86,
   max_width = 21,
   max_height = 34,
	wound_health = 60,
	delirium = 0,
	d_i_f = {sf = 252, nf = 2, s = 0.5, fl = false},
	u_i_f = {sf = 254, nf = 2, s = 0.5, fl = false},
	l_i_f = {sf = 244, nf = 2, s = 0.5, fl = true},
	r_i_f = {sf = 244, nf = 2, s = 0.5, fl = false},
	d_m_f = {sf = 228, nf = 4, s = 4, fl = false},
	u_m_f = {sf = 236, nf = 4, s = 4, fl = false},
	l_m_f = {sf = 212, nf = 4, s = 4, fl = true},
	r_m_f = {sf = 212, nf = 4, s = 4, fl = false},
})

function move_man(c)
	_btn = btn()
	_w, _a, _s, _d = key("w"), key("a"), key("s"), key("d")
	_none = true
	if (_w or _a or _s or _d) _none = false 
	if _btn != button.none or not _none then
		local speed = c.spd
		if key("shift") then 
			speed*=1.5
			c.anim_spd=1.5
		else
			speed*=1
			c.anim_spd=1
		end
		speed*=c.anim_spd
		c.state, c.start_move = "moving", time()
		c.col_point = { x = (c.x+(c.max_width/2)), y = (c.y+(c.max_height/2)) }
		if _btn == button.down_right or (_s and _d) then
			c.i_dir = direction.down
			c.col_point = { x = c.x+c.max_width, y = c.y+c.max_height}
			c.select_point = { x = (c.x+c.max_width)-8, y = (c.y+c.max_height)-8 }
			if collide(c) == false then
				c.y, c.x = c.y + (0.50 * speed), c.x + (1 * speed)
			end
		elseif _btn == button.up_left or (_w and _a) then
			c.i_dir = direction.up
			c.col_point = { x = c.x, y = c.y}
			c.select_point = { x = c.x+8, y = c.y+8 }
			if collide(c) == false then
				c.y, c.x = c.y - (0.50 * speed), c.x - (1 * speed)
			end
		elseif _btn == button.up_right or (_w and _d) then
			c.i_dir = direction.up
			c.col_point = { x = c.x+c.max_width, y = c.y }
			c.select_point = { x = ((c.x+c.max_width)-8), y = (c.y+8) }
			if collide(c) == false then
				c.y, c.x = c.y - (0.50 * speed), c.x + (1 * speed)
			end
		elseif _btn == button.down_left or (_s and _a) then
			c.i_dir = direction.down
			c.col_point = { x = c.x+1, y = c.y+c.max_height}
			c.select_point = {x = (c.x+1)+8, y = (c.y+c.max_height)-8}
			if collide(c) == false then
				c.y, c.x = c.y + (0.50 * speed), c.x - (1 * speed)
			end
		elseif _btn == button.right or _d then
			c.i_dir = direction.right
			c.col_point = { x = c.x+c.max_width, y = c.y+(c.max_height/2)}
			c.select_point = { x = (c.x+c.max_width)-8, y = c.y+(c.max_height/2)}
			if collide(c) == false then
				c.x = c.x + (1 * speed)
			end
		elseif _btn == button.left or _a then
			c.i_dir = direction.left
			c.col_point =  { x = c.x, y = c.y+(c.max_height/2)}
			c.select_point = { x = c.x+8, y = c.y+(c.max_height/2) }
			if collide(c) == false then
				c.x = c.x - (1 * speed)
			end
		elseif _btn == button.down or _s then
			c.i_dir = direction.down
			c.col_point = { x = c.x+(c.max_width/2), y = c.y+c.max_height}
			c.select_point = { x = c.x+(c.max_width/2), y = (c.y+c.max_height)-8 }
			if collide(c) == false then
				c.y = c.y + (1 * speed)
			end
		elseif _btn == button.up or _w then
			c.i_dir = direction.up
			c.col_point = { x = c.x+(c.max_width/2), y = c.y}
			c.select_point = { x = c.x+(c.max_width/2), y = (c.y+8) }
			if collide(c) == false then
				c.y = c.y - (1 * speed)
			end
		end
		
	else
		c.state = "idle"
		c.col_point = { x = (c.x+(c.max_width/2)), y = (c.y+(c.max_height/2)) }
		c.start_idle = time()
	end
end

function animate_character(c)
	ovalfill(c.x+4, c.y+c.max_height-2, c.x+c.max_width-4, c.y+c.max_height+2, 0)
	if c.state == "idle" then
		if c.i_dir == direction.down then
			animate_sprite(
				c,
				c.d_i_f.sf,
				c.d_i_f.nf,
				c.d_i_f.s,
				c.d_i_f.fl
			)
		elseif c.i_dir == direction.up then
			animate_sprite(
				c,
				c.u_i_f.sf,
				c.u_i_f.nf,
				c.u_i_f.s,
				c.u_i_f.fl
			)
		elseif c.i_dir == direction.left then
			animate_sprite(
				c,
				c.l_i_f.sf,
				c.l_i_f.nf,
				c.l_i_f.s,
				c.l_i_f.fl
			)
		elseif c.i_dir == direction.right then
			animate_sprite(
				c,
				c.r_i_f.sf,
				c.r_i_f.nf,
				c.r_i_f.s,
				c.r_i_f.fl
			)
		end
	end
	if c.state == "moving" then
		if c.i_dir == direction.right then
			animate_sprite(
				c,
				c.r_m_f.sf,
				c.r_m_f.nf,
				c.r_m_f.s,
				c.r_m_f.fl
			)
		elseif c.i_dir == direction.left then
			animate_sprite(
				c,
				c.l_m_f.sf,
				c.l_m_f.nf,
				c.l_m_f.s,
				c.l_m_f.fl
			)
		elseif c.i_dir == direction.down then
			animate_sprite(
				c,
				c.d_m_f.sf,
				c.d_m_f.nf,
				c.d_m_f.s,
				c.d_m_f.fl
			)
		elseif c.i_dir == direction.up then
			animate_sprite(
				c,
				c.u_m_f.sf,
				c.u_m_f.nf,
				c.u_m_f.s,
				c.u_m_f.fl
			)
		end	
	end
end

function scan_character_area(c)
	local current_cel = { x = flr(c.select_point.x/_tile_size), y = flr(c.select_point.y/_tile_size) }
	local tr_co = { x = current_cel.x + 1, y = current_cel.y - 1 }
	local tr_spr = mget(tr_co.x, tr_co.y)
	local tr_f = fget(tr_spr)
	local tl_co = { x = current_cel.x - 1, y = current_cel.y - 1 }
	local tl_spr = mget(tl_co.x, tl_co.y)
	local tl_f = fget(tl_spr)
	local t_co = { x = current_cel.x, y = current_cel.y - 1 }
	local t_spr = mget(t_co.x, t_co.y)
	local t_f = fget(t_spr)
	local r_co = { x = current_cel.x + 1, y = current_cel.y }
	local r_spr = mget(r_co.x, r_co.y)
	local r_f = fget(r_spr)
	local l_co = { x = current_cel.x - 1, y = current_cel.y }
	local l_spr = mget(l_co.x, l_co.y)
	local l_f = fget(l_spr)
	local br_co = { x = current_cel.x + 1, y = current_cel.y + 1 }
	local br_spr = mget(br_co.x, br_co.y)
	local br_f = fget(br_spr)
	local bl_co = { x = current_cel.x - 1, y = current_cel.y +1 }
	local bl_spr = mget(bl_co.x, bl_co.y)
	local bl_f = fget(bl_spr)
	local b_co = { x = current_cel.x, y = current_cel.y + 1 }
	local b_spr = mget(b_co.x, b_co.y)
	local b_f = fget(b_spr)
	local bx_co = { x = current_cel.x, y = current_cel.y + 2 }
	local bx_spr = mget(bx_co.x, bx_co.y)
	local bx_f = fget(bx_spr)
	local bxr_co = { x = current_cel.x+1, y = current_cel.y + 2 }
	local bxr_spr = mget(bxr_co.x, bxr_co.y)
	local bxr_f = fget(bxr_spr)
	local bxl_co = { x = current_cel.x-1, y = current_cel.y + 2 }
	local bxl_spr = mget(bxl_co.x, bxl_co.y)
	local bxl_f = fget(bxl_spr)
	local c_co = { x = current_cel.x, y = current_cel.y }
	local c_spr = mget(c_co.x, c_co.y)
	local c_f = fget(c_spr)
	
	if tr_f != 0 then
		add(_flagged_tiles,{ tile_co = tr_co, sprite = tr_spr, flags = tr_f })
	end
	if tl_f != 0 then
		add(_flagged_tiles,{ tile_co = tl_co, sprite = tl_spr, flags = tl_f })
	end
	if t_f != 0 then
		add(_flagged_tiles,{ tile_co = t_co, sprite = t_spr, flags = t_f })
	end
	if r_f != 0 then
		add(_flagged_tiles,{ tile_co = r_co, sprite = r_spr, flags = r_f })
	end
	if l_f != 0 then
		add(_flagged_tiles,{ tile_co = l_co, sprite = l_spr, flags = l_f })
	end
	if br_f != 0 then
		add(_flagged_tiles,{ tile_co = br_co, sprite = br_spr, flags = br_f })
	end
	if bl_f != 0 then
		add(_flagged_tiles,{ tile_co = bl_co, sprite = bl_spr, flags = bl_f })
	end
	if b_f != 0 then
		add(_flagged_tiles,{ tile_co = b_co, sprite = b_spr, flags = b_f })
	end
	if bx_f != 0 then
		add(_flagged_tiles,{ tile_co = bx_co, sprite = bx_spr, flags = bx_f })
	end	
	if bxr_f != 0 then
		add(_flagged_tiles,{ tile_co = bxr_co, sprite = bxr_spr, flags = bxr_f })
	end	
	if bxl_f != 0 then
		add(_flagged_tiles,{ tile_co = bxl_co, sprite = bxl_spr, flags = bxl_f })
	end	
	if c_f != 0 then
		add(_flagged_tiles,{ tile_co = c_co, sprite = c_spr, flags = c_f })
	end
end

function update_character_vitals(c)
	if c.state == "idle" and c.health < 70 then
		last_update_move, current_update = 0, time_since(start_idle, time(), true)
		if current_update != last_update_idle then
			last_update_idle = current_update
			c.health += 0.05
			c.hunger += 0.01
			c.thirst += 0.02
			if c.wound_health < 50 then
				c.wound_health += 0.01
			end
			if c.pain > 50 then
				c.pain -= 0.05
			end
		end
	end
	if c.state == "moving" then
		last_update_idle, current_update = 0, time_since(start_move, time(), true)
		if current_update != last_update_move then
			last_update_move = current_update
			c.health -= 0.65
			c.wound_health -= 0.25
			c.pain += 0.1
			c.hunger += 0.1
			c.thirst += 0.1
		end
	end
	if c.health < 50 and c.wound_health < 50 then
		if _blood_splatter_update == nil or time_since(_blood_splatter_update, time(), true) > 3 then
			_blood_splatter_update = time()
			add(_blood_splatters, { x = c.x, y = (c.y+c.max_height)-4 })
		end 
		if c.pain > 70 and c.hunger > 50 and c.thirst > 50 then
			last_update_idle, current_update = 0, time_since(start_move, time(), true)
			if current_update != last_update_move then
				last_update_move = current_update
				c.delirium += 0.1
			end
		end
	end
end

function draw_blood_splatter()
	if table_length(_blood_splatters) > 0 then
		for i,b in pairs(_blood_splatters) do
			ovalfill(b.x+5, b.y, b.x+13, b.y+3, 2)
		end
	end
end
:: containers.lua
--[[pod_format="raw",created="2024-06-18 20:28:00",modified="2024-08-19 22:02:54",revision=2233]]
include './types.lua'
include './util.lua'

container=entity:new({
	max_capacity = 10,
	small_icon = 0,
	in_range_sprite = 0,
	in_range = false,
	contents = {},
})

function init_containers()
	_containers["1_2"] = container:new({
		max_capacity=10,
		small_icon = 138,
		in_range_sprite = 130,
		in_range_sprite_adjustment = {x=0,y=-16},
		in_range = false,
		contents = {
			container_slot:new(
				{
					quantity = 1, 
					item = water_bottle:new({})
				}
			)
		}
	})
	_containers["1_4"] = container:new({
		max_capacity=25,
		small_icon = 141,
		in_range_sprite = 133,
		in_range_sprite_adjustment = {x=-2,y=-16},
		in_range = false,
		contents = {
			container_slot:new(
				{
					quantity = 1, 
					item = water_bottle:new({})
				}
			)
		}
	})
	_containers["24_5"] = container:new({
		max_capacity=20,
		small_icon = 184,
		in_range_sprite = 176,
		in_range_sprite_adjustment = {x=0,y=7},
		in_range = false,
		contents = {
			container_slot:new(
				{
					quantity = 1, 
					item = water_bottle:new({})
				}
			)
		}
	})
end
:: context_menu.lua
--[[pod_format="raw",created="2024-06-19 22:02:44",modified="2024-08-19 22:02:54",revision=1855]]
context_menu=entity:new({
	x = 0,
	y = 0,
	oo_ui = true,
	open = false,
	options={},
	max_width = 60,
	current_obj = nil,
})

context_option=entity:new({
	name = nil,
	m_is_on = false,
	action = nil
})

context_menu_actions = {
	consume = "Consume",
	discard = "Discard",
	use = "Use",
	equip = "Equip",
}

function draw_context_menu()
	if _cm.open then
		if _m_x > (_cm.x-10)
		and _m_x < (_cm.x+64)
		and _m_y > (_cm.y-10)
		and _m_y < (_cm.y+(table_length(_cm.options)*10)) then
			_cm.open = true
		else
			_cm.open = false
			_cm.options = {}
		end	
		
		local current_offset = 0
		for i, o in pairs(_cm.options) do
			rectfill(_cm.x, _cm.y+current_offset, _cm.x+60, _cm.y+current_offset+12,0)
			rect(_cm.x, _cm.y+current_offset, _cm.x+60, _cm.y+current_offset+12,23)
			print(o.name, _cm.x+2, _cm.y+1+current_offset)
			if _m_x > _cm.x 
			and _m_x < _cm.x+60 
			and _m_y > _cm.y+current_offset 
			and _m_y < _cm.y+current_offset+12 then
				rect(_cm.x+1, _cm.y+current_offset+1, _cm.x+59, _cm.y+current_offset+11,2)
				o.m_is_on = true
			end
			current_offset += 12
		end
	end	
end

function update_context_menu(obj)
	local s_x, s_y = _m_x, _m_y+6
	_cm.open = true
	_cm.options = {}
	_cm.current_obj = obj
	_cm.x, _cm.y = s_x, s_y
	if obj.type == object_type.item then
		if obj.item_type == item_type.consumable then
			add(_cm.options, context_option:new({name = context_menu_actions.consume, action = obj.consume}))
			add(_cm.options, context_option:new({name = context_menu_actions.discard}))
		end
	end
end

function execute_context_menu_option(c, a)
	if _cm.open and _m_l_b then
		for i, o in pairs(_cm.options) do
			if o.m_is_on then  
				o.action(_cm.current_obj, c, a)
			end
		end
	end
end
:: inventory.lua
--[[pod_format="raw",created="2024-05-14 20:53:29",modified="2024-08-19 22:02:54",revision=5872]]
include './types.lua'
include './util.lua'
include './items.lua'

inventory=entity:new({
	max_width = 119,
	max_height = 68,
	max_capacity = 10,
	inv_starting_x = 0,
	cont_starting_x = 0,
	c_i_starting_y = 5,
	oo_ui = true,
	open = false,
	total_weight = 0,
	capacity = 10,
	selected_container = 1,
	contents={},
})

function dc_in_range_any(t)
	for i, dc in pairs(t) do
		if dc.in_range then
			return true
		end
	end
	return false
end

function remove_item_from_container(ccc, item)
	for i, cc in pairs(ccc.contents) do
		if cc.item.sprite == item.sprite then
			if cc.quantity <= 1 then
				del(ccc.contents,cc)
			else
				cc.quantity -=1
			end
		end
	end
end

function add_to_inventory(c_i, cc, item)
	local existing_item_index = 0
	local total_weight = 0
	for i, s in pairs(c_i.contents) do
		if s.item.sprite == item.sprite then
			existing_item_index = i
		end
		total_weight += s.item.weight * s.quantity
	end
	if (total_weight + item.weight) > c_i.max_capacity then
		print("Can't carry anymore.", _m_x, _m_y+6, 8)
		return
	end
	if existing_item_index > 0 then
		c_i.contents[existing_item_index].quantity += 1
	else
		slot = container_slot:new({quantity = 1, item = item})
		add(c_i.contents, slot)
	end
	remove_item_from_container(cc, item)
end

function display_inventory_contents(c_i)
	local current_y = flr(c_i.c_i_starting_y+13)
	print("Inventory", c_i.inv_starting_x+11, current_y-11, 23)
	c_i.total_weight = 0
	for i, c in ipairs(c_i.contents) do
		local m_is_on = false
		c.starting_x = c_i.inv_starting_x
		c.starting_y = current_y
		c.ending_x = c_i.inv_starting_x+114
		c.ending_y = current_y+8
		if (_m_x) > c.starting_x
			and (_m_x) < c.ending_x
			and (_m_y) > c.starting_y
			and (_m_y) < c.ending_y then
			m_is_on = true
			rect(c.starting_x-1, c.starting_y-2, c.ending_x+1, c.ending_y+1, 2)
		end
		spr(c.item.sprite,c_i.inv_starting_x,current_y, 23)
		print(c.item.name,c_i.inv_starting_x+11, current_y, 23)
		print(c.item.weight, c_i.inv_starting_x+80, current_y, 23)
		print(c.quantity, c_i.inv_starting_x+103, current_y, 23)
		current_y+=10
		c_i.total_weight += (c.item.weight*c.quantity)
		if(m_is_on) then
			if _m_r_b then
				update_context_menu(c.item)
			end
		end
	end
end

function display_container_contents(c_i)
	local current_y = flr(c_i.c_i_starting_y+13)
	print("Container(s)", c_i.cont_starting_x+11, current_y-11, 23)
	local cont_icn_x = c_i.cont_starting_x+2
	local cont_icn_y = current_y+45
	for i, cc in pairs(_discovered_containers) do
		if cc.in_range == true then
			local cont_icn_b_s_x = cont_icn_x - 1
			local cont_icn_b_s_y = cont_icn_y - 1
			local cont_icn_b_e_x = cont_icn_x + 8
			local cont_icn_b_e_y = cont_icn_y + 8
			if i == c_i.selected_container or c_i.selected_container == 1 then
				c_i.selected_container = i
				rect(cont_icn_b_s_x, cont_icn_b_s_y, cont_icn_b_e_x, cont_icn_b_e_y, 2)
				spr(cc.small_icon, cont_icn_x, cont_icn_y)
				for j, ccc in ipairs(cc.contents) do
					local m_is_on = false
					ccc.starting_x = c_i.cont_starting_x
					ccc.starting_y = current_y
					ccc.ending_x = c_i.cont_starting_x+114
					ccc.ending_y = current_y+8
					if (_m_x) > ccc.starting_x
					and (_m_x) < ccc.ending_x
					and (_m_y) > ccc.starting_y
					and (_m_y) < ccc.ending_y then
						rect(ccc.starting_x-1, ccc.starting_y-2, ccc.ending_x+1, ccc.ending_y+1, 2)
						m_is_on = true
					end
					spr(ccc.item.sprite, c_i.cont_starting_x,current_y)
					print(ccc.item.name, c_i.cont_starting_x+11, current_y, 23)
					print(ccc.item.weight, c_i.cont_starting_x+80, current_y, 23)
					print(ccc.quantity, c_i.cont_starting_x+100, current_y, 23)
					current_y+=10
					if(m_is_on) then
						if _m_l_b then
							add_to_inventory(c_i, cc, ccc.item)
						elseif _m_r_b then
							update_context_menu(ccc.item)
						end
					end
				end
			else
				rect(cont_icn_b_s_x, cont_icn_b_s_y, cont_icn_b_e_x, cont_icn_b_e_y, 21)
				spr(cc.small_icon, cont_icn_x, cont_icn_y)
				if _m_l_b and ((_m_x) > cont_icn_b_s_x
				and (_m_x) < cont_icn_b_e_x
				and (_m_y) > cont_icn_b_s_y
				and (_m_y) < cont_icn_b_e_y) then
					c_i.selected_container = i	
				end
			end
			cont_icn_x+=10
		end
	end
end

function show_inventory(c_i)
	if      (_m_x) > _c_x-360
		and (_m_x) < (_c_x-121)
		and (_m_y) > _c_y
		and (_m_y) < (_c_y + 6)
	then
		c_i.oo_ui = false
		c_i.open = true
	else
		c_i.oo_ui = true
	end
	if c_i.open == true then
		spr(inv_sprites.open,_c_x-360,c_i.c_i_starting_y)
		spr(inv_sprites.open,(_c_x-240)+1,c_i.c_i_starting_y)
	else
		spr(inv_sprites.closed,_c_x-360,c_i.c_i_starting_y)
		spr(inv_sprites.closed,(_c_x-240)+1,c_i.c_i_starting_y)
	end	
	if not ((_m_y) < (c_i.c_i_starting_y+c_i.max_height)) and 
		((_m_l_b == true
		and c_i.oo_ui == true)
		or (_m_r_b == true 
		and c_i.oo_ui == true))
	then
		c_i.open = false
	end
end

function display_inventory_weight(c_i)
	local s_x = c_i.inv_starting_x-1
	local s_y = c_i.c_i_starting_y+1
	local p_c = (c_i.total_weight / c_i.capacity) * 100
	local p_r = (7.3/100)*p_c
	local e_x = s_x + p_r
	local e_y = s_y + p_r
	local colour = 0
	if p_c <= 25 then
		colour = 28
	elseif p_c > 25 and p_c <= 50 then
		colour = 26
	elseif p_c > 50 and p_c <= 75 then
		colour = 9
	else
		colour = 8
	end
	rectfill(s_x, s_y, e_x, e_y, colour)
end

function update_inventory(c_i)
	c_i.inv_starting_x = flr(_c_x-358)
	c_i.cont_starting_x = flr(_c_x-237)
	c_i.c_i_starting_y = flr(_c_y+4)
	show_inventory(c_i)
	if c_i.open then
		display_inventory_contents(c_i)
		display_inventory_weight(c_i)
		if table_length(_discovered_containers) > 0 and dc_in_range_any(_discovered_containers) then
			display_container_contents(c_i)
		else
			c_i.selected_container = 1
		end
	end	
end

inv_sprites={
	closed=(gfx_offset.gfx_3+4),
	open=(gfx_offset.gfx_3+5)
}
:: items.lua
--[[pod_format="raw",created="2024-05-30 22:52:53",modified="2024-08-19 22:02:54",revision=4289]]
item=entity:new({
	type = object_type.item,
	sprite = 0,
	name = "",
	amount = 100,
	weight = 1.0,
	item_type = nil
})

item_type = {
	consumable = 1,
	junk = 2,
	useable = 3,
	special = 4,
	unique = 5,
}

consumable=item:new({
	item_type = item_type.consumable,
	consume = function(self,o,a)
		self.amount -= a
		--o.state = "consuming"
	end
})

water_bottle=consumable:new({
	sprite = (gfx_offset.gfx_3+130),
	empty_sprite = 180,
	name = "Water Bottle",
	amount = 100,
	weight = 0.8,
	consume = function(self,o,a)
		consumable.consume(self,o,a)
		o.thirst -= a
	end
})

fizzy_drink_can=consumable:new({
	sprite = (gfx_offset.gfx_3+128),
	name = "Fizzy Drink",
	amount = 70,
	weight = 0.6,
	consume = function(self,o,a)
		consumable.consume(self,o,a)
		o.thirst -= a
	end
})

energy_drink=consumable:new({
	sprite = (gfx_offset.gfx_3+129),
	name = "Energy Drink",
	amount = 50,
	weight = 0.5,
	consume = function(self,o,a)
		consumable.consume(self,o,a)
		o.thirst -= a
	end
})

antiseptic=consumable:new({
	sprite = (gfx_offset.gfx_3+136),
	name = "Antiseptic",
	amount = 100,
	weight = 0.4,
	consume = function(self,o,a)
		consumable.consume(self,o,a)
		o.wound_health += a
	end
})

pain_killers=consumable:new({
	sprite = (gfx_offset.gfx_3+138),
	name = "Painkillers",
	amount = 16,
	weight = 0.05,
	consume = function(self,o,a)
		consumable.consume(self,o,a)
		o.pain -= (a*10)
	end
})



:: label.png
b64$iVBORw0KGgoAAAANSUhEUgAAAeAAAAEOCAIAAADe_FMwAAAnk0lEQVR4Ae2df2wb55nnH7PC
WmHtC3yB1H9iTuC2DByZUM4Xx6kSZlFm2zcBDSNFjSa3lXIoLjCT2gQr7hSHtslu0J-Y3GAcYbxO
OE2Rrs32koUXCbQWstO9aAHzrEUiny8Gy7XNGr4OXeQPCWnuGh_jtGh8vT7069GQooa-ac73A_HV
O8Nn3ved78z7mX83EOgK2r-_W4TQadQ7fo2ouxk16DRDiKBrvPzYNoTQOR49eglRdz9qAEEDAMBA
cfXq1foFGzZsgKABAKAHaj5--nzNX8f_4n0i_v3cLj4MIK-uoN7x60ePXkIOHeLRo5fUO36NqLsc
NWjCzufPn69vZydDiKybjtb_FTF0KltE3ZOoQaN2lodTU1Oyf_zYsWo7Q9B4uRE1AD1gampqcXFR
Hu7atYtGj0DQAADQA65evXr_-HnnmV27dq17FQQNAAA9YHFxcV1ZBxATAAD0JxA0AAD0KUOIAAAA
usnYX7y-k2jXrl3rVgYQFgAAdNPO3LldXZR-EDQAAPSLnT0yhMgAAKDLdj4zeoS0XasOIWgAAOgT
1pKykwBiAgCA-mQIEQAAQBf4-dwuhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAB1hAyLwCS9cvIoQwADzxKfaabM_2S8QNOwMABzdp-sFgoadAYCj_3S-
BPBEAQCgPxlCBL7i6c_MIgQwYHznX5YGdb8E8HQBAKA-gaABAKBPGUIEoI2I21cG4C6sC8Pei-fv
39-Q4KZpIs9e5QlBA7_T_dZ-vqHXn-jeXzd6yXe-_12PlU899RTy7G2eEDQA9Xj3tn93yy--541b
Xwc7up07Su6cPNy3sun48JV9K5sWFxeRZ3OMjo5yZ2lpyVebBYIGXdVx-cN_qG9FzftWNvEhm5gP
2c7Hh68gzxbt7EMCMAiAndeq986_lU3SwtLF7ZKyD-N02nlpaYmITp48efLkSb-JGoIGsHMbbOJy
sR3dztZGnq3beXR09OTJkx-Tf-Ax-Qd_czQEDWDn9tiEiJTcuePDV-atbGI1Ly4uLi4u7lvZdHz4
ipI7hzxbsfOfnHvrT8695TdHQ9AAdm6DTdjC7Gj2svxpcXERdm7dzrsuvLvrwrt_czQEDdqPa3-W
P_zD_iZo3cLIsybSznwoHe2TrTQEm-iczCPbnIeJVy4hEwAgaNBHXgagP-l9_hu-1X_wSG-tuvAu
ES3efstvt9-9_-Q36LXX-XD7AbwBPlQz7Nx2du3axW11x3kIPLK0tDQ6Orq0tHT--ff-Pv2N326-
e-H2W6Sd77---qWlJT-kMIRXAbQLRVHOr1Die399Q9-F_ZXbFYVs227u8uPDV1ydmofI07ujR0dH
T548_Vv9B0TkKztD0MBN5pFtiVcuNWdnuSEH42PTkFMWFxdlW92Rh8izFUcTka-sTEQBKAm0Zfv5
-KZ2eQB5NnEV25nV7Dc7E9EQ5OI3rpYubwhthZ093ppt214qjw9fQZ5tzLOmo30IBA3cZB7Zlnjl
EmzSkFOU3DnYuaOO9udmDMBHADbpk9tEnsDFECLwG1_cfefv99KG0FZss4Zu1rbttX596qmnoK1_
yxOCBgNL5pFtiVcuwSZenGKaJuzcb3kODAFE4EO_OPvO1dJl2KRPbhx5grUYQgS_3RJXS5c3hLY2
unmEED7P0LKsNo6GPNub54B9QgJwlj954l9_V7-gm-d8DDbptFKRJ0KozwZEMPC8cPGq7Kf-29-v
PvUz7h-8PyeIaENo61oXTu74uvNQ-7MvIkxnkrIvI12XN_-9PPJse57OJJ-4VKtOc_0XCBp0T9AX
3joaLBTl4c78S0QU_cSfEdHPN15wXZib_Gr1aCfu24FI9-z3n7drKOTZep633-1YhwR94a2jvU1m
CC_HnzkT_cp-XLrM-R0f3v78Zx-wspf87JQ2qhl5diLPASOACHzLz01N2pl58p-f2HLkRS_byof7
qnN3jTybYHdg4_7AxoFPaQie8jNff_0VIvovDz9CRC_f_1_NbjAiOnHfDj_opGuzIE8vBAtFikT8
sEMhaEBff_2Vf3-73fLwu1suE9FT722FVrqjZuQJ1iKACHzIzvxLO-Mv-fTo09U--cW3BHeiC0ei
C0e8b7wB23u9vSPk6WR3YOPbr5_SbbBQ9M9WHYKtfMs-Pn-ksc-c8uCTX-3zx77jVLM19w9Nb0Ii
OnHfjhtdJX21Ep-nGSwUKRJJxGNExK2vCMBT0PRjn7mF7WzN-UPTdnZuyP5x3ACs3M95vv36KSLK
zM27Wv8wBEMB1jQRbQhtbePm5M6J_3b0v0duCNn5Lc9goTgRGiGiRDzmbPP5vH82ZgBuAp3ervyH
hSHPRlkoLXMnMzcvW18xBIOArm1g7py4b0c-LAN59nOewUKRiCZCI3yYiMdkC0GDAedM5CtEtDP-
Up2a3MRXB8ksA_NlX_W5UFqeCI1k5uYT8ZhspbUhaOBHTXdOzd03ywB7ebDztCxLCMEuTsRjzjaf
z0PQwI_a7pqa62z71uXiKykPdp4LpWV2dGZuPhGPceurRwlBg_ua7je5AH-mGSwUucN2JiL2st-s
TEQBvMGAiMpj4fJYGDmAPkEIQUQLpWUiyszNu1r-MIRXAWpGCKDf3slgoUhEE6ERIkrEY842n89D
0ABGBqDHjl4oLbOjM3PziXiMW1fl7sDG-w1Bg8Hg6f8wXL-gO-91BSmBPoHtTETs5Wo7DzwBvAS_
YsvSrfX-EBHoHxZKy0SUmZt3tRA0AAD0mInQCBEl4jFXC0EDn6KPPIcQQJ_wUFrmTmZuXraMpmma
pkHQAADQGyZCI9xJxGOyJSLLsnySAAQNVnH44jsIAfQJC6VlIsrMzbta-zCElwA4uXTzswgB9AkT
oREiev-cGe3cGSLi1jrnowQCeAkAAP3JQmnZsiw-JzCEl8BXvDf6K4QAbhTeP3eGiKLp5Nuvn7rz
oXtlK3_CoMFAsWXp1vVKLiIl0A9YlkVEm7fvZCM7W-8QwHsAAOg3crpBRNF00uc5QNBgFfrIcwgB
9Alvv36KiO586F7nn7MgWChC0AAA0D1Yu5u372Q7_zmKIbwNwMnhi_-QzYgB9BghBBGVx8LVP935
0L3BQpFCAoIGvuPSzc8iBNBbanq5oQIIGoBmyOlG9UnbtidnNITjIptSFUWpPh9NJ32Yxu7ARh-e
NQTtL94b-VVv7WzbNkvHtm0_WdNBwPn1cgZl2zbphj8d7UMCiMBXbFm6tf5fp_08OaOxZRRFmZzR
_FBRlGxKxdNxkk2pbGROSVEUNvXkjGbbdk43-BnLPYefGb_GH_53CDsBONFHnksvf62jdmbLZFMq
6UY0nUTm3tNjL-swvS1HXqSDB4ho38ommprik6o6_B91CBp0zy-Ok9IyRBRNJ0k3sinVVeNbsilV
UZRoOpnTjfrpDbyjOYr3Ll-6nm_k7CSAzQCcHL74ThfsLC2DwL2wVnq2bed0ww8fKnnmnsPPjF-D
D49_CG8-cHLp5me7YOdqrUTTSdKNbEqFtauttJaFJ2e0bEol3XAWD1IIMoe9hw7x_X0rm2hqivuq
qkLQYKB4b-RXXZur2s7BQpE7tm1zR1EUPl8eC_PpuKgZF5_UcQ2ko6s-Ufe9-I3f-bnuEyk7CWAb
_IotS7fW-_uCboho--79_-fvVxRFqoeIoumkoijZlL924Lpusm1bURROrGaYg4czgWxKzelG4def
5MN7Dj8zfg0IGvgOfeS5ztm5PBYuj4X5jGVZtm1L6Qy2cVr5nu3fv9_2bcuy_FBm6IfEqj9X_1Y2
TV0DggagnXaWZ1x2lsYRQiiKkk2p-gyKfSSEcCXmcrQzMZ-Y_b2vPs4nVQcQNPAdhy__02k7S_k4
D6sLfI4rEFdcA_-onG5IO-uZIewE4OTSzc922jWMZVnVZcFCMZpOkm5kU_rkjOar5LMptaKkQtGZ
WHVQrsQGLwrbtl1P-_gHid0f-zEEDUA37MybkDuKotQ0TnC1pwabOnddM6h1472hcd4pf7fe3fEA
PejH7QNB_4v-8dOH16n4hNZp47B0FEURQhCRZVmuX-m839i-f3_d85ZlcWgN5Xyjw3aOppOnf-Z3
-tywEDToFHU8y6KpVjMRDZ5lvFDnrmVK1Xaub-Ybmpxu8Acpmk4S0fTnvwRBA9AN4-CWk2RTqp1S
kdhaTM5ozeXcdrIplT8Stm3XX1UrXpbjR6_dDBaKRESRiA_ffgAbAPSc-fv3K4qiKEqHOn01fkP1
ffKAsik1pxuKokTTyWg6qShKtivf1GChWLGzXxmCHYATfeS59PLXujypZVlEJIToRKdDwzY9fkP3
2w9q5g9GNJ2UJ6PpJOlGTjeIyLbtyRmt-iA53bBt2-W9WfdCVnN5LOw8ec-hZz744avcP3v2LAQN
QDcQQkQikUgkMj4_fvbs2TZ2iKgTwzY9vsd6Vr9pmn2l5lWOrnzSK6au-3CdhxXn6gaLmzXN0713
_dKWrduq7bzlyIt08AAR7VvZRFNTfFJVVQga_IvDF9_hm3tgZ8uynAprb6dDwzY3vscyzqSHb8Ja
al7T1GuQ0w2_EXZxsFBk_QohymNh1nQ0neTpZqenV0ncIe7v_UbKEDRYk0s3P9v9SXkD_8HO4_Pj
ROSlTNO0Hr4GrMV2XV6RuG7kdIM1TURsaiGEaZp2SlUURdrZNY4Q4uUXn_cz9xx_5oMfvsp9_cGD
oAHoLEKIDmm0o3ZubnyPZSyvXtm5YtWm9O28PFgolldrOptSJ2c00zR5EC5mO_89dCibUuUUlXEK
xUcff5JH27eyiaamuK_qKgQNQDfsbFlWJBLpkEbHx8enru1q5tixY_0dvxN2tixLLnh3YKPsv-nR
h9zJ6Ybzpuoo1Xu9086y3lm5rr6rCRaKzmdtmmZONxRFEUKUx8Kz09PSztLvPGmwUKRCkYh25l-6
XUT3iZQhaLAm_shz6eWvdXlSNlFH7Xw6tMc549TUlKqq3bfz_Pg4EXkp0zRtXc-atr364Rny5OTM
9cvXrZfFLF95yfV63ZDKbtTOL7-4vOyzgnm62elp_ZNUc7BQVBSFl8RaN01TUZSNw58MExHRPYef
_eCHr3Kx-OBB0AB0FiFEJ_zMLj4d2vPtpTec0-1laI_maaqqtj5_E5d4LBNCmKZZM65qC7NeiYgN
y315WL-eVVxdn02p1Tavj3T9lq3bWOiz09Oz09POGqeXXZc77RxNJ_nIi3x_38ommpriPj8_CBr4
iMMX36Gbe2Bny7IikUjb7axp2unQnlOfC7zxE3rgy58jojd_8k8PfPlz9JN-YkcfO3as9Yk6ZGfL
smRE_Xxe9qPpZLRWjKvUqRsN1F8rZpPmdMM12uSMxhL3YmdWc0WsrNpCkYgeffxJd6nDy_WxcKVn
WXzI4-AgH-7p-f6RMgQN1uTSzc92f1I2UdvtPD4_TkSnPhe487YAfflzd94WICL68ueko2eJumxn
XpKXMk1bX4V1YK81VxxNJ0k3crph27Y0chNqdpu3EXK6weMEHRL3IRA06AuEEG23M3fuvC0QfPBb
D4_O-vJoig8fvnD_6SdOEtHsj2ZbH7_JSzyWCSFM02xFcy363U6pLk3XNLI8dKm5OWzbluOwnctj
4aMfJP6GfgxBA9AbO1uWFYlE2m7nOtx5W6BdE3XIzpZl9fa5VLysGy5NSy_3xcguFEWxbTt6zc6m
aSqK8u6OB_hBP24NCNpf-OQTlT3WV7CJ2m7n8fFxHn-hhe_89u0kEb39y4-uvC3w2reTCy98hwXd
ZTvzkryUaVq-PKmKgnUjm1InZ7ScbnTCyy71BwvF8liYD6Pp5Omf-Z0-NywEDfoCIUTb7cydPT8t
VeZYcLSOTovjN3GJxzIhhGmafaRp3cjpxnVld-ibbZum-BJMf-5L-twXAagB9IOdLcvybrezZ8_O
j4977Lx-7kzNSfl86_N3zs6cSf9g2zZ3sim1Q1MoiiK-B5MzGts5WCgGC0V-bo0h2MGH7A5sJKI3
P-qwT9bj3c7caUiIp0N77jp3gog2b9-pVPPp0J67SidaH7-RDst93TJN0-rnhcmmVEVRFEVhY5Ju
ZFPq5EzHV_hbL0PQgIKFYnks3CeLEUK03c6app0O7YmWPp0L7bmrdOK7E7fyXKlzZ_R5TdOOHTvW
NTtzx2OZEMI0zf5SMxERRdNJ0o2cbhCRbdvrmjqnG7ZtK4riPLnuhWxn1yt6z_FnPvjhq9znlDRN
e-zlRyBoADpoZ8uyIpGIF201budfENHp0J7Uj2Zn-tPe1I9mT4f2EFEu9At29NTUlKqqjY7fBTtb
ltVval7laOaaqes-X_dhxbm6weJmTfN0712_tGXrtmo7bznyIh08QET7VjbR1BSfVFV14LcGBO1r
goViJBLJzM0n4jFu3-zow_4vg03kXXON2plhR7OdGeloTdN4t3scv5WOx2_Apmm9fTfWUvOapl6D
nG7w82UXBwtFlq8QojwWZk1H00mebnZ6epXEHeL_nm_k7CQASYFEPCZb3jzdRwjRCTvfVTqxjj5C
v4iWPn06tEfTtC7Y_ezZs97rhRC9eiWyqZY8mE2pOd3gP5Y4KzinG6ZplsfC7N9goSiEsG2bp5N2
do6jKIozh3sOPzN_DT-szSHoyedk5uYT8ZhsJ0Ijb79_6s6H7u2ynS3LikQiXrTl3c5EdDq0hx19
fPjKvpVNRHRX6cTx4Su3jT7qcnQutGdqakpV1Y7amWf0aGfLsnplZ0VRoulk-YI6IzgvDxaKZSLW
NBGRbmRT6uSMZpomD8LFbOe9hw6xrHmKyjiF4qOPP8mj7VvZRFNT3FfVlr4iEDS4AUjEY842n89P
hEaoUCyPhbu2BjaRd83V15_L06E9RLSvdII73P-l0su3jT56l_OkU52ds-P4_Pi63xjuaJrmXNju
wEbZf-OjDyufFt1w1tRRqvd6p51lvbNyXX1XEywUnR9j0zRzuqEoihCiPBaenZ6WdpZ_50mDhSIV
ikS0M--S7yK6T6QMQYNVZObmE-EYt0S0UFqeCI10eQ1CiNbtzPojolzoF9HSp7lDRNHSpz-wtoxO
21l_RbyUscvqeNa27VU-6IY8OTlz3e-r1stilq_85Hq9bkhlN2rnl198XvZZwTzd7PS0-EmqOVgo
KorCS2Ktm6apKMrG4U_GiYjonsPPfPDDV_XDgqDB4MNe5vYPm5HtHCwUy2O8KbphZ8uyIpGIF23V
L1BVVdM0IsqF9rCaWdN3lbwupn-sbFnWWoustjDrlYjYsNyXh-XrXcXV9dmUWm3z_kjXb9m6jYU_
Oz09Oz3trHF62XW5087RdJKOvMjn961soqkp7qtqZdkQNBhYMnPziXhMthOhkYXSMju6a7CJvGuu
fgHvW6em7yqdOD58ZV-pBE93fPjKvpVNd107dOJl-BY7Hr8BvH5JPp_X-Wg6Ga0V4yp16kYD9deK
2aQ53XCNNjmjscS92JnVXBErq7ZQJKJHH3-SXerwcnksLN8GPuRxeJAP--R_-0gZggbXScRjzjaf
z7OdLcuKyj3TeYQQbbFzTU0T0b6VTceHr8g_d06H9sgFsK87bWfueCwTQpim2Vye7LXmiqPpJOlG
Tjds25ZGbkLNbvM2Qk43eJygQ_I_BIIGlJmbT8Rj3BLRQmmZHd1NO1uWFYlEvGirISES0ebtO3mW
r1ybbrOU8rkT3Pngj4fs9P6xs2VZLWquadiwdkp1abqmkeWhS83NYdu2HIftXB4LH-0g8Tf0Ywga
_BH2MrdEJO0cLBS74wU2kXfNNSrE_pwO7eGOpmnHjh1rdPxGOx6-AZpW24ndpOJl3XBpWnq5LUZ2
oSiKbdvRa3Y2TVNRlHd3PEAP_nFvBqAnn5OZm3e1C6VlIhJCdHMZQoie2NlFp_189uxZ7-VdfgRr
EU0no_mkoijZlEpEOd1gL-Nfe_fiKYgoWCiWx8Js57bPcgMxBEP5nEQ85mzz_fxEaIR-Ko_Fu2Zn
y7IikYgXbTUkROcs7587w53N23dWr_Gu0glVVRsdv4mOdztbltU-70k0nSTdyOlGpd9hLMuyHXae
-vyX-Lk9AzAUyMzNy5aIFkrL3bQz70YhBMuRrVqn04QQJaxg15m7SifYzk2P72XZzvV7KZOZ9A_2
bXMnm3LH2C4URZHfg8kZje0cLBSDheJal1Q-00FiCHoCiXhMtkQ0ERrp8gKEEJZlRSKRhszYqJ35
fPUZ3uGtTNTokryUcSZ98oZkU6qiKIqisDFJN7IpdXJG68LUrObyWNifexOC9juZuflEPCbbidDI
Qmm5y45mE7XdztU6rrZ26xM1sSQvZZrWDf01rGYiIoqmk6QbOd0gItu21zV1Tjds21YUxXly3QtZ
zdLOdQJ5-OVHIGgwmCTiMWebz_e7bGdGCNF2O1fruCYtjt-ckryUCSFM0_wrNa9yNHPN1PUfrvOQ
hcsXSk3zdO9dvrRl67ZqO2d_8-E7fLk9IWhAmbn5RDzGLREtlJa77GghhGVZkUikvXbOzM1v3r7z
5--4qvNObdsm2_bDHQ9_ITM3n2hZ0x2ys2VZPXwr1lLzmqZeg5xu8I2wi4OFIstXCFEeC7Omo_kk
Tzc7PV2t8mxK3f3gF97-4_dg7-BN4YMH_FdN0yBoMPiwl7kloi7bmYh4A7fLzpm5eZqbrxh5eIUe
foiI7n3tdeeMpx5_iP5-wUpiZTjDxXPziXis03YeHx8nIi9lvbVPNqUqitKuyysS142cbrCmiYhN
LYQwTdNOqYqiOO0s1awoinMo48J5SlY_Ca2sEIIGNwaZuflEPCbbidDIQmm5_44WQrTNzvLWhlek
l089-NBa-cTK8PUoiBqdsYlFeixjefXKzhWrNqVv5_XBQrG8WtPZlDo5o5mmyYNwMdt576FDOd1w
qpmvChaK1jm-SBmCBtdJxGPONp-P98TOlmVFIpEW7Tw_Pk4OQUsLc3-Hg18goh0PfuHe116tPi9p
YuoO2dmyLLmq3YGNsv-mRx9yh10mqaNU7-VOO8t6Z_W6_q4mWCg6n7VpmjndUBRFCFEeC89OT0s7
S7-LSZ3XEtHe4ZvCBw9wX9M0CBoMPpm5_UQ8xi0RLZSWu_xoNlHrdj579izfCA-rMq9krfOJeKzT
dh4fHyciL2V17CO9adv2qh90Q56cnLl__br1spjlKy_5Xq8bUtmN2vnlF5_-rtdDh_TaZqen5U9S
zaxjXpJUc3ksnLn82B1kEZFx4TwlK7PzUiFoMOCwl7n9w2bssp0ZIUTrduZOgog7X-1_ZdvX58g3
p1uZsYlLPJYJIUzTrLnmaguzXqW2uC8P69e7iqvrsym12ub1ka7fsnUbC312enp2etpZ4-KyEz5T
HgvndIMsq3z5Im31i5QhaHCdzNx8Ih6T7URoZKG03GVHCyEsy4pEIq3b2dlJxGPcae_w1Z0O2dmy
LBlRPp_X-Wg6Ga0V4yp16kYD9deK2aQ53XCNNjmjscS92JnVrCgKjxYsFKlQJKJHH3-SXerwcnks
XOlZllPNvKrT0xcrTh__KXzwAPc1zdOnAoIGNzCJeMzZ5vP5LtuZiNhE-WDPLoxPRF7KWrQPy7G5
4mg6SbqR0w3btqWRm1Cz27yNwB8JqfhvPc6uJuPCeUpWBlcUBYIGg09mbj4Rj3FLRAul5e47WgjR
IY121M7Nje_xTAhhmmYrmmvR73ZKdWm6ppHloUvNTcNjRtPJYKHI965fjFhk_UTKEDRYBXuZWyLq
iZ0ty4pEIh3SaOfs3MT43u1sWVZvX4yKl3XDpWnp5XYZ2QXPFSwUy2PhnG6QZWWv-BVtIiLaO3xT
_OABLtO02p8NCBoMDpm5_UQ8JtuJ0MhCabnLjmYT_cHO4_PjROSlrH-sU1GwbmRT6uSMltONDnnZ
qf6cbvCbUVnAtysFxoXzlKxMzZUQNBhkEvGYs83n8122MyOE6JBGO2rn5sb3WCaEME2zjzStG_zN
DtlZwuZ1znLmL39Nul_kDEGDVWTm5hPxGLdEtFBa7rKjhRCWZUUiEY92u9HxaGfLsvpq2bZtsx_z
KXVyRuucmm3bdo4fLBSJSFXVmpe8_dGHA7w3A9ATYC9zS0RdtjMRsYm8aGt8fNxjmex4r2yu06Fh
_8rO2ZSa0w1FUaLpZDSdVBQlm6qty7bDdi6Phf25N4egJ5_TmZtPxGOynQiNLJSWu_9oIYR3fzXk
u47auaPjCyFM0_y5mhVFYTXLk9F0knQjpxtEZNv25IxWf5Ccbti2rSiK8_S6F7KapZ01rXaxc2EQ
NBg0EvGYs83n8z2xs2VZkUik7XYmoo7auXPjcyb9puYaWrxm6vrP13WmPBbmC6Wmebr3Ll-asnVb
tZ0zv-n4Hb7cnhA0oMzcfCIe45aIFkrLXXY0m8ijv5pwYufs3LnxNU3r7VuxlprXNPUa5HSDn690
8aoLdSOnG9F0kqebnZ52e5wom1J3P-iF9--4Odg7fFP44AH_tecRQdCgG7CXuSWiLtuZEUJ499fA
25k7QgjTNHvySmRTqqIobbn8usF1I6cb1ZrOplQ7pSqK4rSzVLOiKM6VGBfOU7IyYCsrhKDBjUFm
bj4Rj8l2IjSyUFrusqOFEJZlRSKRttuZiDpq586Nz5n00M7Xxdq4vp2XBwtF_ZSJyLKsbEqdnNHk
IFzMdt576FBON5xq5nGChaJ1zi9ShqDBdRLxmLPN5-NdtjNvWu-_asKJnbNz58bXNM0Z0e7ARtl-
86MPucMuk9RRqvd6p51lvbNyXX27KI_FV006FrZTak435CCz09PSzmxztrBUs-PyvcM3hQ8e4L4r
IggaDCaZuflEPMYtES2UlrvvaCGEd38NvJ25I4QwTbOOZ23bXvWDbsiTkzPX5bVuvSxm_cpLrtfr
hlR2Q3Zm-17X66FDcm3Sy9fVfM3FvCSp5vJYOHP5sTvIIiLjwnlKVmbnpULQYMBhL3P7h83YEztb
lhWJRNpuZyLqqJ07Nz5nslZi1RZmvUptcV8e1q93FVfXZ1Nqtc3rI13-6ONPsmSdRnb6Wqq5PBYm
IrKsykmi8lg4pxtkWeXLF2mrX6QMQYPrZObmE-GYbCdCIwul5S47mk3k0V9NOLFzdu7c_Jq2yoP5
fF72o_lktFaMq9SpGw3UXyuOppNElNMN12iTMxpL3IudWc2KovBoZaJgoRgsFNnUqygU_X9FzQ6k
mnlVp6cvVpw_fFP44AHuuyKCoMEAkojHnG0_n__ynRkhhHd-DbyduSOEME2zuTxZjs0VR9NJ0o2c
bti2LY3chJqdtm10-fyR4HGCheK3HmdXk3HhPCUrgyuKAkGDwSczN5_Ix7glooXScpcdLYSwLCsS
ibTdzkTUUTt3bnzOpBXHtQKb0U6pLk3XNLI8rFZzc-CY0XQyWCjyvesXIxZZPpEyBA1WwV7mloi6
bGciYhPl83lN09hNdTpE5KVMdizL8ljZXKdD4zvt3CsqXtYNl6all9tlZBc8V7BQLI_Fc7pBlpW9
8le0iYho7-BN4YMHuIyzgqDBIJOZm0-EY7KdCI0slJa772ipJC_dhuobGrmJTkfHN02z529IRcG6
kU2pkzNaTjc65GUnOd3gT3dlAd_unDcunKdkZWr_SAw2G2CogeeFi1dl-8JbR4lod2AjEeXzeSKK
RCLOYj5JROWxcHeWl02pvnocy8vLHitHRkaIaHJG65OVV6Qpld3dWeT56u-H7Xc-Jg_f_FSrTqve
Lz1kCP4Cmbn5RDzGLREtlJYnQiNdm71-BATq01EvS4QQRFQeC9c8X015oDMP4LUD7GVuiaibdgYA
QNBgTTJz8652obSMWACAoEHvScRjrnYiNIJYQF8RLBQhaOAXNE3TNE0eZubmZUtEC6VlRARgZwga
9BLLsriTiMdkS0QToRGEA-pEzX62MxEN4SXwOZm5_UQ8JtuJ0MhCaRmOBj1XM3fKY2HXGQga_AXL
sohIO3dGthQSsDPoB6Sa-QwEDdzK3rx9JxwN_srOwULRnzkE8Cr4ls3bd27evjOaTjpbInr-3Jk_
XO2T--wGHpkPCRaKvrUzBA3o7ddPOdvN23cSkWVZ-WbnX33-Fjjan2ouj4UhaAAqRNNJIsrpRr8t
DI72lZ1ZzWxn3zoagvbpqy_586F7nX9E9Pbrp-p28XC0f3BK2fXSQtDAp7CjN2-f2be7Ao72lZ2D
haJv7UxEQ3gVfIgQwrUNXI4OFooUqtT0Fbd_810iev6zD_AhDjZOKZfHwr51NATtO2pKuYmabvL8
Zx948ptvENGvvn8LOxr46kX1raM34D0YeF64eBUhAO9ceOto1_a6-e7HBiyN9t5RAK8jAKAn0ux-
O-ccCHrweeJTGxACABA0gKPBDc-TnxkdsIluXIYQgd8cPTIygjSA3z4GTTM5o-XwjgJ4RQAAoD_B
oAEAAIIGAAAAQQMAAAQNAAAAggYAAAgaAAAABA0AAACCBgAACBoAAAAEDQAAEDQAAAAIGgAAAAQN
AAAQNAAAAAgaAAAgaAAAABA0AABA0AAAACBoAAAAEDQAAEDQAAAAIGgAABh8hhCB31AUBSEAvIo3
xE0F8JYAAEB-sgER_I3gC8cRAqhP4t-83y7MkvnNxwcvivbeFATtO6Z-_rcIAYAbggAiAAAACBoA
AAAEDQAAEDQAAAAIGgAAIGgAAAAQNAAAAAgaAAAgaAAAABA0AABA0AAAACBoAAAAEDQAAEDQAAAA
IGgAAICgAQAAdJQNiAAAPzP907-t6Pi33-0YQm6aACIAAAAIGgAAQAMMyd5Hb74b2H2L6_eaJ32I
9xw_evNdIlqr2DWO87D6Qu-FvTpsMVLvQ9UpbuOSAOhfQYP6dmjI42t97dY6rL7Qe-FaHnf92sbD
Nn7wvIxZp7ihcUBPePozowihJUHXdIF83Z2HdTyylo9cG7vm4M7xqw-rFze3LZ1DVQ-r6jhrWhG6
a5zqqdcqln70MnvNQOpMtO61nUi1iYnq3H5DTweAG0nQLtXW1JPz0LUxXGKtaRlX6zSOc8zqKWoW
r7XOmitcaz-XmaiJy6t-bU4ZHhcgx6--2XMeupZU-e2peW31jdT5KDaRquvL3VyqrQQOQL8LuuYb
37n5nIO77LCWLLwMtZY1OkH9iZpexrqGqvmtqvkRrXlYX4vrDtXEl6yh_2061a49dwD6QtDe33ip
VO9bq_ZhTTs43VFzrjreae6z4fHytuipoTEb0uK6om-61zamWj1RJ1IF4IYXtEt8zkOXH_tYkk_6
xqkv9LUm8jhX9eXNfVeqr62eV97duhPJa2WN0zuucWoeVkdaPZ1rloYOXRN5LF7r19ZT9fL46qRa
f0kA3PCCrn65XfuqerdUb7Oae6zmOHUGb2iuFvdk-WvXXVhz17aSc0PRtTJRQ4dNp9ros2vojgAY
KEG3Qje3R4fmwg5HqgD06T5CBAAA0J-8P9u4AY7hbkBGAAAAEHRFWHRMb2RlUE5HADIwMTEwMjIx
41m2wQAAAABJRU5ErkJggg==
:: main.lua
--[[pod_format="raw",created="2024-05-03 13:26:10",modified="2024-08-19 22:02:54",revision=6886]]
include './util.lua'
include './character.lua'
include './moodles.lua'
include './inventory.lua'
include './static_interactable.lua'
include './containers.lua'
include './context_menu.lua'
include './rooms.lua'

_debug_message = ""


function _init()
	poke4(0x5000, get(fetch(pwd().."/pal/0.pal")))
	poke(0x4000,get(fetch"/system/fonts/lil_mono.font"))
	_w_w, _w_h = 480,270
	_m_x, _m_y, _m_b, _m_w_x, _m_w_y = 0,0,0,0,0
	_c_x = 0
	_c_y = 0
	_tile_size = 16
	_buffer_time = 0.1
	_mlb_last_pressed = nil
	_mrb_last_pressed = nil
	_mmb_last_pressed = nil
	_coroutines = {}
	c=man:new({})
	_blood_spatter_update = nil
	_blood_splatters = {}
	_redraw_list = {}
	m={moodles={}}
	_flagged_tiles = {}
	i=inventory:new({contents = {}})
	_cm=context_menu:new({})
	_containers = {}
	_rooms = {}
	_discovered_containers = {}
	_fog={}
	init_containers()
	init_rooms()
end

function _draw()
	_c_x = c.x + (_w_w/2)
	_c_y = (c.y + (_w_h/2)) - 270
	_c_y_b = (c.y + (_w_h/2))
	cls(0)
	camera(c.x - (_w_w/2),c.y - (_w_h/2))
	map()
	draw_fow()
	display_moodles(m,c)
	update_interactables(i, c)
	draw_blood_splatter()
	animate_character(c)
	redraw_tiles(c)
	update_inventory(i)
	draw_context_menu()
	draw_border()
	debug()
	update_coroutines()
end

function update_coroutines()
	for c in all(_coroutines) do
		if costatus(c) then
			coresume(c)
    	else
    		del(_coroutines,c)
    	end
    end
end

function _update()
	update_mouse_input()
	move_man(c)
	scan_character_area(c)
	execute_context_menu_option(c, 25)
	update_character_vitals(c)
end

function update_mouse_input()
	_m_x, _m_y, _m_b, _m_w_x, _m_w_y = mouse()
	_m_x = _m_x + (_c_x - _w_w)
	_m_y = _m_y + _c_y
	if ((_m_b&1>0) and _mlb_last_pressed == nil) 
	or ((_m_b&1>0) and time_since(_mlb_last_pressed,time(),false) > _buffer_time) then
		_mlb_last_pressed = time()
		_m_l_b=true
	else
		_m_l_b=false
	end
	if ((_m_b&2>0) and _mrb_last_pressed == nil) 
	or ((_m_b&2>0) and time_since(_mrb_last_pressed,time(),false) > _buffer_time) then
		_mrb_last_pressed = time()
		_m_r_b=true
	else
		_m_r_b=false
	end
end

function debug()
	--circfill(c.select_point.x, c.select_point.y,2)
	print("debug_message: " .. _debug_message
			.. " cpu1: " .. stat(1)
			.. " cpu2: " .. stat(2), _c_x-475, _c_y+258, 31)
end
:: moodles.lua
--[[pod_format="raw",created="2024-05-07 21:40:35",modified="2024-08-19 22:02:54",revision=5796]]
include './types.lua'
include './util.lua'

moodle=entity:new({
	moodle = "none",
	sprite = 0,
	x = 0,
	y = 0,
})

function get_index(moodles, name)
	for i, m in ipairs(moodles) do
		if m.moodle == name then
			return i
		end
	end
	return -1
end

-- moodle entity, name, value, sprite 1, 2, 3, 4, lower check
function generate_moodle(m, n, v, s1, s2, s3, s4, lc)
	index = get_index(m.moodles, n)
	current_moodle = nil
	new_sprite = -1
	if index != -1 then
		current_moodle = m.moodles[index]
	end
	if lc then
		if v >= 20 and v < 30 then
			new_sprite = s1
		elseif v >= 30 and v < 50 then
			new_sprite = s2
		elseif v >= 50 and v < 70 then
			new_sprite = s3
		elseif v >= 70 then
			new_sprite = s4
		end
	else
		if v < 70 and v >= 50 then
			new_sprite = s1
		elseif v < 50 and v >= 30 then
			new_sprite = s2
		elseif v < 30 and v >= 10 then
			new_sprite = s3
		elseif v < 10 then
			new_sprite = s4
		end
	end
	if current_moodle == nil and new_sprite != nil then
		return moodle:new({moodle=n,sprite=new_sprite})
	elseif current_moodle != nil and current_moodle.sprite != new_sprite then
		del(m.moodles,current_moodle)
		return moodle:new({moodle=n,sprite=new_sprite})
	elseif current_moodle != nil and new_sprite == nil then
		del(m.moodles,current_moodle)
		return nil
	elseif current_moodle != nil and current_moodle.sprite == new_sprite then
		del(m.moodles,current_moodle)
		return moodle:new({moodle=n,sprite=new_sprite})
	end
	return nil
end

--moodle object, character
function display_moodles(m,c)
	m.moodles = {}
	h = generate_moodle(
		m, 
		"health", 
		c.health, 
		moodle_sprites.health_1, 
		moodle_sprites.health_2, 
		moodle_sprites.health_3, 
		moodle_sprites.health_4, 
		false)
	if h.sprite > 0 then
		add(m.moodles,h)
	end

	wh = generate_moodle(
		m, 
		"wound_health", 
		c.wound_health, 
		moodle_sprites.wound_health_1, 
		moodle_sprites.wound_health_2, 
		moodle_sprites.wound_health_3, 
		moodle_sprites.wound_health_4,
		false)
	if wh.sprite > 0 then
		add(m.moodles,wh)
	end

	p = generate_moodle(
		m, 
		"pain", 
		c.pain, 
		moodle_sprites.pain_1, 
		moodle_sprites.pain_2, 
		moodle_sprites.pain_3, 
		moodle_sprites.pain_4,
		true)
	if p.sprite > 0 then
		add(m.moodles,p)
	end

	hu = generate_moodle(
		m, 
		"hunger", 
		c.hunger, 
		moodle_sprites.hunger_1, 
		moodle_sprites.hunger_2, 
		moodle_sprites.hunger_3, 
		moodle_sprites.hunger_4,
		true)
	if hu.sprite > 0 then
		add(m.moodles,hu)
	end

	t = generate_moodle(
		m, 
		"thirst", 
		c.thirst, 
		moodle_sprites.thirst_1, 
		moodle_sprites.thirst_2, 
		moodle_sprites.thirst_3, 
		moodle_sprites.thirst_4,
		true)
	if t.sprite > 0 then
		add(m.moodles,t)
	end

	d = generate_moodle(
		m, 
		"delirium",
		c.delirium,
		moodle_sprites.delirium_1, 
		moodle_sprites.delirium_2, 
		moodle_sprites.delirium_3, 
		moodle_sprites.delirium_4,
		true)
	if d.sprite > 0 then
		add(m.moodles,d)
	end
	
	current_y = 4
	for i, moodle in pairs(m.moodles) do
		spr(moodle.sprite, _c_x-20, _c_y + current_y)
		current_y += 20
	end
end

moodle_sprites={
	health_1 = (gfx_offset.gfx_3+40),
	health_2 = (gfx_offset.gfx_3+41),
	health_3 = (gfx_offset.gfx_3+42),
	health_4 = (gfx_offset.gfx_3+43),
	wound_health_1 = (gfx_offset.gfx_3+32),
	wound_health_2 = (gfx_offset.gfx_3+33),
	wound_health_3 = (gfx_offset.gfx_3+34),
	wound_health_4 = (gfx_offset.gfx_3+35),
	pain_1 = (gfx_offset.gfx_3+1),
	pain_2 = (gfx_offset.gfx_3+2),
	pain_3 = (gfx_offset.gfx_3+3),
	pain_4 = (gfx_offset.gfx_3+4),
	delirium_1 = (gfx_offset.gfx_3+8),
	delirium_2 = (gfx_offset.gfx_3+9),
	delirium_3 = (gfx_offset.gfx_3+10),
	delirium_4 = (gfx_offset.gfx_3+11),
	hunger_1 = (gfx_offset.gfx_3+24),
	hunger_2 = (gfx_offset.gfx_3+25),
	hunger_3 = (gfx_offset.gfx_3+26),
	hunger_4 = (gfx_offset.gfx_3+27),
	thirst_1 = (gfx_offset.gfx_3+16),
	thirst_2 = (gfx_offset.gfx_3+17),
	thirst_3 = (gfx_offset.gfx_3+18),
	thirst_4 = (gfx_offset.gfx_3+19),
}
:: rooms.lua
--[[pod_format="raw",created="2024-07-07 21:47:51",modified="2024-08-19 22:02:54",revision=1146]]
include './types.lua'
include './util.lua'

room=entity:new({
	s_x = 0,
	s_y = 0,
	e_x = 0,
	e_y = 0,
	is_discovered = false,
	replacement_sprite = 0,
	health_taken = 0,
	is_unlocked = true,
})

function draw_fow()
	for i, r in pairs(_rooms) do
		if r.is_discovered == false then
			_debug_message = "cy, sy: " .. _c_y_b .. " " .. r.e_y 
			if _c_x > r.s_x and _c_y_b > r.s_y then
				--if _c_x > r.e_x and _c_y_b > r.e_y then --NOT SURE WHAT THIS WAS FOR!
																	--BUT IT WAS BREAKING WHEN MC
																	--WENT TO TOP OF MAP
					rectfill(r.s_x, r.s_y, r.e_x, r.e_y, 0)
				--else
					if _c_x > r.e_x and _c_y_b < r.e_y then
						rectfill(r.s_x, r.s_y, r.e_x, _c_y_b, 0)
					elseif _c_x < r.e_x and _c_y_b > r.e_y then
						rectfill(r.s_x, r.s_y, _c_x, r.e_y, 0)
					end
				--end
			end
		end
	end
end

function unlock_inner_door(ft,rep_tile)
	mset(ft.tile_co.x, ft.tile_co.y, rep_tile)
	mset(ft.tile_co.x, ft.tile_co.y+1, rep_tile)
end

function unlock_normal_door(room, ft)
	draw_info_text("unlock called", 10)
	mset(ft.tile_co.x, ft.tile_co.y, room.replacement_sprite)
	mset(ft.tile_co.x, ft.tile_co.y+1, room.replacement_sprite)
	room.is_discovered=true
end

function unlock_heavy_door(room, ft)
	draw_info_text("heavy called", 5)
end

function init_rooms()
	_rooms["19_10"] = room:new({
		s_x = 272,
		s_y = 0,
		e_x = 448+15,
		e_y = 144+15,
		replacement_sprite = 11,
		is_discovered = false,
		call_unlock = unlock_normal_door
	})
	_rooms["37_10"] = room:new({
		s_x = 464,
		s_y = 0,
		e_x = 688+15,
		e_y = 144+15,
		replacement_sprite = 11,
		is_discovered = false,
		call_unlock = unlock_heavy_door
	})
end
:: static_interactable.lua
--[[pod_format="raw",created="2024-05-23 20:57:56",modified="2024-08-19 22:02:54",revision=5290]]
include './types.lua'
include './util.lua'
include './containers.lua'
include './rooms.lua'


function update_interactables(inv, c)
	local is_cont_in_range = false
	for i,ft in pairs(_flagged_tiles) do
		if fget_precalc(ft.flags,1) == true then
			local container_co = tostr(ft.tile_co.x) .. "_" .. tostr(ft.tile_co.y)
			local container_obj = _containers[container_co]
			if container_obj != nil then
				is_cont_in_range = true
				container_obj.in_range = true
				if inv.selected_container == 1 or inv.selected_container == container_co then
					spr(
						container_obj.in_range_sprite, 
						(flr(ft.tile_co.x*_tile_size)) + container_obj.in_range_sprite_adjustment.x,
						(flr(ft.tile_co.y*_tile_size)) + container_obj.in_range_sprite_adjustment.y
					)
				end
				if _discovered_containers[container_co] == nil then
					_discovered_containers[container_co] = container_obj
				else
					_discovered_containers[container_co].in_range = true
				end
			end
		end
		if fget_precalc(ft.flags,2) == true then
			if keyp("e") then
				local room_key = ft.tile_co.x .. "_" .. ft.tile_co.y
				local room = _rooms[room_key]
				if room != nil then
					room.call_unlock(room, ft)
				else
					replacement_tile = mget(ft.tile_co.x, ft.tile_co.y-1)
					unlock_inner_door(ft, replacement_tile) 
				end
			end
		end
		if fget_precalc(ft.flags,3) == true then
			if (c.select_point.y) < (ft.tile_co.y*16) then
				add(_redraw_list, ft)
			end
		end	
	end
	if not is_cont_in_range then
		for i, dc in pairs(_discovered_containers) do
			dc.in_range = false
		end
	end
	_flagged_tiles = {}
end

function redraw_tiles()
	_debug_message = "rdl: " .. table_length(_redraw_list)
	for i, ft in ipairs(_redraw_list) do
		spr(ft.sprite, ft.tile_co.x*16, ft.tile_co.y*16)
	end
	_redraw_list={}
end
:: types.lua
--[[pod_format="raw",created="2024-05-06 22:22:02",modified="2024-08-19 22:02:54",revision=5687]]
class={
	new=
		function(self,tbl)
			tbl=tbl or {}
			setmetatable(tbl, {
				__index=self
				}
			)
			return tbl
		end,
}

entity=class:new({
	x=0,
	y=0,
})

container_slot=entity:new({
	container_id = 1,
	quantity = 0,
	item = nil,
	starting_x = 0,
	starting_y = 0,
	ending_x = 0,
	ending_y = 0,
})

object_type={
	item=1,
}

button={
	up=4,
	down=8,
	left=1,
	right=2,
	down_right=10,
	up_left=5,
	up_right=6,
	down_left=9,
	none=0
}

direction={
	up = 1,
	down = 2,
	left = 3,
	right = 4
}
:: util.lua
--[[pod_format="raw",created="2024-05-03 22:03:54",modified="2024-08-19 22:02:54",revision=5920]]

--object, start frame,
--num frames, speed, flip
function animate_sprite(o, sf, nf, sp, fl)
	if(not o.a_la) o.a_la = sf
	if(not o.a_ct) o.a_ct = 0
	if(not o.a_st) o.a_st = 0
	if(not o.fl) o.fl = false
	o.a_ct += 1
	if o.a_ct % (60/(sp*o.anim_spd)) == 0 then
	 o.a_st += 1
	 if(o.a_st == nf) o.a_st = 0
	elseif o.a_la != sf then
	o.a_st = 0
	end

	o.a_fr = sf + o.a_st
	spr(o.a_fr, o.x, o.y, fl)
	o.a_la = sf
end

-- object, radius, flag
function collide(o,r,f)
	r = r or 0
	f = f or 0
	if fget2(mget((o.col_point.x/_tile_size) + r, (o.col_point.y/_tile_size)) + r,f) then
		return true
	end
	return false
end

function coalesce(a, b)
	if a == nil then
		return b
	else
		return a
	end
end

function time_since(from, to, f)
	if f == true then
		return flr(to) - flr(from)
	else
		return to - from 
	end
end

--tile sprite number, flag
function fget2(n, f)
	if f then
		return (fget(n)>>f)&1==1
	else
		return fget(n)
	end
end

-- pre calculated flag, flag
function fget_precalc(pcf, f)
	return (pcf>>f)&1==1	
end

function table_length(t)
	local length = 0
	for i, c in pairs(t) do
		length+=1
	end
	return length
end

function draw_border()
	rect(_c_x-479, _c_y, _c_x-1, _c_y+269, 17)
	rect(_c_x-478, _c_y+1, _c_x-2, _c_y+268, 0)
	rect(_c_x-477, _c_y+2, _c_x-3, _c_y+267, 33)
end

function draw_info_text(t, d)
	local func = cocreate(function()
		local l = #t
		local n_px = l*5 
		local x_offset = (480-n_px)/2
		for i=1,(d*60) do
			local x = (_c_x-480)+x_offset
			rectfill(x-1, _c_y+239, x+n_px+1, _c_y+248, 0)
			print(t, x, _c_y+240, 33)	
			yield()
		end
	end)
	add(_coroutines, func)
end

gfx_offset={
	gfx_0=0,
	gfx_1=256,
	gfx_2=512,
	gfx_3=768
}
:: .info.pod
b64$LS1bW3BvZCx0aXRsZT0iR3V0IFdvdW5kIChXb3JraW5nIFRpdGxlKSIsbW9kaWZpZWQ9IjIw
MjQtMDgtMTkgMjI6MDI6NTQiLGF1dGhvcj0iQmF1bGVycyIsbm90ZXM9IlZlcnkgbXVjaCBXSVAs
IEhvcGluZyB0byBmaW5pc2ggdGhpcyB5ZWFyLiIsaWNvbj11c2VyZGF0YSgidTgiLDE2LDE2LCIw
MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDYwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
MDAwMDAwMDAwMDA2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNjAwMGQwMDAwMDAw
MDAwMDAwMDAwMDAwMDAwMDAwMDA2MGQwMDAwMGQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGQwNjA2
MGQwMDBkMDAwMDAwMDAwMDAwMDAwMDAwMGQwMDAwMGQwNjBkMDAwMDAwMDAwMDAwMDAwMDAwMDAw
MDAwMGQwMDBkMDYwMDAwMGQwMDAwMDAwMDAwMDAwMDAwMDAwMDBkMDAwNjA2MGQwMDAwMDAwMDAw
MDAwMDAwMDAwMDAwMDAwMDAwMGQwNjAwMGQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGQwMDA2MGQw
MDAwMGQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGQwNjA2MGQwMDAwMDAwMDAwMDAwMDAwMDAwMDAw
MGQwMDAwMGQwNjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGQwMDAwMDYwMDAwMDAwMDAwMDAw
MDAwMDAwMDAwMDAwMDAwMDAwMDA2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIp
LHJ1bnRpbWU9OCxjcmVhdGVkPSIyMDI0LTA1LTAzIDEzOjQ4OjQ3Iix2ZXJzaW9uPSIwLjAuOCIs
d29ya3NwYWNlcz17e2xvY2F0aW9uPSJtYWluLmx1YSMxMDEiLHdvcmtzcGFjZV9pbmRleD0xfSx7
bG9jYXRpb249ImNoYXJhY3Rlci5sdWEjMjI0Iix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9u
PSJzdGF0aWNfaW50ZXJhY3RhYmxlLmx1YSM1NyIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlv
bj0iY29udGFpbmVycy5sdWEjNDciLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249ImludmVu
dG9yeS5sdWEjMTExIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJjb250ZXh0X21lbnUu
bHVhIzczIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJpdGVtcy5sdWEjMjIiLHdvcmtz
cGFjZV9pbmRleD0xfSx7bG9jYXRpb249Im1vb2RsZXMubHVhIzExNyIsd29ya3NwYWNlX2luZGV4
PTF9LHtsb2NhdGlvbj0idHlwZXMubHVhIzI4Iix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9u
PSJ1dGlsLmx1YSM1NSIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0icm9vbXMubHVhIzM4
Iix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJnZngvMS5nZngiLHdvcmtzcGFjZV9pbmRl
eD0yfSx7bG9jYXRpb249ImdmeC8yLmdmeCIsd29ya3NwYWNlX2luZGV4PTJ9LHtsb2NhdGlvbj0i
Z2Z4LzMuZ2Z4Iix3b3Jrc3BhY2VfaW5kZXg9Mn0se2xvY2F0aW9uPSJnZngvMC5nZngiLHdvcmtz
cGFjZV9pbmRleD0yfSx7bG9jYXRpb249Im1hcC8wLm1hcCIsd29ya3NwYWNlX2luZGV4PTN9LHts
b2NhdGlvbj0ic2Z4LzAuc2Z4Iix3b3Jrc3BhY2VfaW5kZXg9NH0se2xvY2F0aW9uPSJwYWwvMC5w
YWwiLHdvcmtzcGFjZV9pbmRleD03fX1dXWx6NAAEAAAAAwAAADBuaWw=
:: [eoc]
